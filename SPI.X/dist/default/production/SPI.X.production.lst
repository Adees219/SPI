

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 17:45:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384     0000                     	;# 
   385     0001                     	;# 
   386     0002                     	;# 
   387     0003                     	;# 
   388     0004                     	;# 
   389     0005                     	;# 
   390     0006                     	;# 
   391     0007                     	;# 
   392     0008                     	;# 
   393     0009                     	;# 
   394     000A                     	;# 
   395     000B                     	;# 
   396     000C                     	;# 
   397     000D                     	;# 
   398     000E                     	;# 
   399     000E                     	;# 
   400     000F                     	;# 
   401     0010                     	;# 
   402     0011                     	;# 
   403     0012                     	;# 
   404     0013                     	;# 
   405     0014                     	;# 
   406     0015                     	;# 
   407     0015                     	;# 
   408     0016                     	;# 
   409     0017                     	;# 
   410     0018                     	;# 
   411     0019                     	;# 
   412     001A                     	;# 
   413     001B                     	;# 
   414     001B                     	;# 
   415     001C                     	;# 
   416     001D                     	;# 
   417     001E                     	;# 
   418     001F                     	;# 
   419     0081                     	;# 
   420     0085                     	;# 
   421     0086                     	;# 
   422     0087                     	;# 
   423     0088                     	;# 
   424     0089                     	;# 
   425     008C                     	;# 
   426     008D                     	;# 
   427     008E                     	;# 
   428     008F                     	;# 
   429     0090                     	;# 
   430     0091                     	;# 
   431     0092                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0094                     	;# 
   436     0095                     	;# 
   437     0096                     	;# 
   438     0097                     	;# 
   439     0098                     	;# 
   440     0099                     	;# 
   441     009A                     	;# 
   442     009B                     	;# 
   443     009C                     	;# 
   444     009D                     	;# 
   445     009E                     	;# 
   446     009F                     	;# 
   447     0105                     	;# 
   448     0107                     	;# 
   449     0108                     	;# 
   450     0109                     	;# 
   451     010C                     	;# 
   452     010C                     	;# 
   453     010D                     	;# 
   454     010E                     	;# 
   455     010F                     	;# 
   456     0185                     	;# 
   457     0187                     	;# 
   458     0188                     	;# 
   459     0189                     	;# 
   460     018C                     	;# 
   461     018D                     	;# 
   462                           
   463                           	psect	strings
   464     03C0                     __pstrings:
   465     03C0                     stringtab:
   466     03C0                     __stringtab:
   467                           
   468                           ;	String table - string pointers are 1 byte each
   469     03C0  1BFF               	btfsc	btemp+1,7
   470     03C1  2BCA               	ljmp	stringcode
   471     03C2  1383               	bcf	3,7
   472     03C3  187F               	btfsc	btemp+1,0
   473     03C4  1783               	bsf	3,7
   474     03C5  0800               	movf	0,w
   475     03C6  0A84               	incf	4,f
   476     03C7  1903               	skipnz
   477     03C8  0AFF               	incf	btemp+1,f
   478     03C9  0008               	return
   479     03CA                     stringcode:
   480     03CA                     stringdir:
   481     03CA  3003               	movlw	high stringdir
   482     03CB  008A               	movwf	10
   483     03CC  0804               	movf	4,w
   484     03CD  0A84               	incf	4,f
   485     03CE  0782               	addwf	2,f
   486     03CF                     __stringbase:
   487     03CF  3400               	retlw	0
   488     03D0                     __end_of__stringtab:
   489     03D0                     _dpowers:
   490     03D0  3401               	retlw	1
   491     03D1  3400               	retlw	0
   492     03D2  340A               	retlw	10
   493     03D3  3400               	retlw	0
   494     03D4  3464               	retlw	100
   495     03D5  3400               	retlw	0
   496     03D6  34E8               	retlw	232
   497     03D7  3403               	retlw	3
   498     03D8  3410               	retlw	16
   499     03D9  3427               	retlw	39
   500     03DA                     __end_of_dpowers:
   501     000B                     _INTCONbits	set	11
   502     0007                     _PORTCbits	set	7
   503     0009                     _PORTE	set	9
   504     0008                     _PORTD	set	8
   505     0006                     _PORTB	set	6
   506     0005                     _PORTA	set	5
   507     0013                     _SSPBUF	set	19
   508     0014                     _SSPCON	set	20
   509     0049                     _RE1	set	73
   510     0048                     _RE0	set	72
   511     0030                     _RB0	set	48
   512     0096                     _IOCBbits	set	150
   513     008F                     _OSCCONbits	set	143
   514     0095                     _WPUBbits	set	149
   515     0081                     _OPTION_REGbits	set	129
   516     0089                     _TRISE	set	137
   517     0088                     _TRISD	set	136
   518     0086                     _TRISB	set	134
   519     0085                     _TRISA	set	133
   520     0094                     _SSPSTATbits	set	148
   521     0094                     _SSPSTAT	set	148
   522     043A                     _TRISC2	set	1082
   523     0439                     _TRISC1	set	1081
   524     043B                     _TRISC3	set	1083
   525     043D                     _TRISC5	set	1085
   526     0189                     _ANSELH	set	393
   527     0188                     _ANSEL	set	392
   528     03DA                     STR_1:
   529     03DA  3453               	retlw	83	;'S'
   530     03DB  3431               	retlw	49	;'1'
   531     03DC  343A               	retlw	58	;':'
   532     03DD  3400               	retlw	0
   533     03DE                     STR_3:
   534     03DE  3453               	retlw	83	;'S'
   535     03DF  3432               	retlw	50	;'2'
   536     03E0  343A               	retlw	58	;':'
   537     03E1  3400               	retlw	0
   538     03E2                     STR_5:
   539     03E2  3453               	retlw	83	;'S'
   540     03E3  3433               	retlw	51	;'3'
   541     03E4  343A               	retlw	58	;':'
   542     03E5  3400               	retlw	0
   543     03E6                     STR_2:
   544     03E6  3425               	retlw	37	;'%'
   545     03E7  3464               	retlw	100	;'d'
   546     03E8  3400               	retlw	0
   547     03E6                     
   548                           	psect	cinit
   549     000F                     start_initialization:	
   550                           ; #config settings
   551                           
   552     000F                     __initialization:
   553                           
   554                           ; Clear objects allocated to COMMON
   555     000F  01FB               	clrf	__pbssCOMMON& (0+127)
   556                           
   557                           ; Clear objects allocated to BANK0
   558     0010  1383               	bcf	3,7	;select IRP bank0
   559     0011  3037               	movlw	low __pbssBANK0
   560     0012  0084               	movwf	4
   561     0013  3049               	movlw	low (__pbssBANK0+18)
   562     0014  120A  118A  2494  120A  118A  	fcall	clear_ram0
   563     0019                     end_of_initialization:	
   564                           ;End of C runtime variable initialization code
   565                           
   566     0019                     __end_of__initialization:
   567     0019  0183               	clrf	3
   568     001A  120A  118A  29A1   	ljmp	_main	;jump to C main() function
   569                           
   570                           	psect	bssCOMMON
   571     007B                     __pbssCOMMON:
   572     007B                     _tipo:
   573     007B                     	ds	1
   574                           
   575                           	psect	bssBANK0
   576     0037                     __pbssBANK0:
   577     0037                     _temp3:
   578     0037                     	ds	1
   579     0038                     _temp2:
   580     0038                     	ds	1
   581     0039                     _temp1:
   582     0039                     	ds	1
   583     003A                     _ResSlave2C:
   584     003A                     	ds	5
   585     003F                     _ResSlave2:
   586     003F                     	ds	5
   587     0044                     _ResSlave1:
   588     0044                     	ds	5
   589                           
   590                           	psect	clrtext
   591     0494                     clear_ram0:	
   592                           ;	Called with FSR containing the base address, and
   593                           ;	W with the last address+1
   594                           
   595     0494  0064               	clrwdt	;clear the watchdog before getting into this loop
   596     0495                     clrloop0:
   597     0495  0180               	clrf	0	;clear RAM location pointed to by FSR
   598     0496  0A84               	incf	4,f	;increment pointer
   599     0497  0604               	xorwf	4,w	;XOR with final address
   600     0498  1903               	btfsc	3,2	;have we reached the end yet?
   601     0499  3400               	retlw	0	;all done for this memory range, return
   602     049A  0604               	xorwf	4,w	;XOR again to restore value
   603     049B  2C95               	goto	clrloop0	;do the next byte
   604                           
   605                           	psect	cstackCOMMON
   606     0070                     __pcstackCOMMON:
   607     0070                     ?_setup:
   608     0070                     ?_escrituraLCD:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_Lcd_Init:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_spiReceiveWait:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_spiWrite:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_spiRead:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_configPort:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_pullup:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_configIntbits:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_isr:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ??_isr:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_main:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_Lcd_Port:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_Lcd_Cmd:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_Lcd_Write_Char:	
   648                           ; 1 bytes @ 0x0
   649                           
   650                           
   651                           ; 1 bytes @ 0x0
   652     0070                     	ds	2
   653     0072                     ?_spiInit:
   654     0072                     ??_spiReceiveWait:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0072                     ??_spiWrite:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     ??_spiRead:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     ??_configPort:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0072                     ??_pullup:	
   667                           ; 1 bytes @ 0x2
   668                           
   669     0072                     ??_configIntbits:	
   670                           ; 1 bytes @ 0x2
   671                           
   672     0072                     ?_configOsc:	
   673                           ; 1 bytes @ 0x2
   674                           
   675     0072                     ??_Lcd_Port:	
   676                           ; 1 bytes @ 0x2
   677                           
   678     0072                     ?___lwdiv:	
   679                           ; 1 bytes @ 0x2
   680                           
   681     0072                     spiInit@sDataSample:	
   682                           ; 2 bytes @ 0x2
   683                           
   684     0072                     spiWrite@dat:	
   685                           ; 1 bytes @ 0x2
   686                           
   687     0072                     Lcd_Port@a:	
   688                           ; 1 bytes @ 0x2
   689                           
   690     0072                     configOsc@freq:	
   691                           ; 1 bytes @ 0x2
   692                           
   693     0072                     ___lwdiv@divisor:	
   694                           ; 2 bytes @ 0x2
   695                           
   696                           
   697                           ; 2 bytes @ 0x2
   698     0072                     	ds	1
   699     0073                     ??_Lcd_Cmd:
   700     0073                     ??_Lcd_Write_Char:	
   701                           ; 1 bytes @ 0x3
   702                           
   703     0073                     spiInit@sClockIdle:	
   704                           ; 1 bytes @ 0x3
   705                           
   706                           
   707                           ; 1 bytes @ 0x3
   708     0073                     	ds	1
   709     0074                     ??_configOsc:
   710     0074                     spiInit@sTransmitEdge:	
   711                           ; 1 bytes @ 0x4
   712                           
   713     0074                     Lcd_Write_Char@a:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     ___lwdiv@dividend:	
   717                           ; 1 bytes @ 0x4
   718                           
   719                           
   720                           ; 2 bytes @ 0x4
   721     0074                     	ds	1
   722     0075                     ?_Lcd_Write_String:
   723     0075                     ??_spiInit:	
   724                           ; 1 bytes @ 0x5
   725                           
   726     0075                     spiInit@sType:	
   727                           ; 1 bytes @ 0x5
   728                           
   729     0075                     Lcd_Cmd@a:	
   730                           ; 1 bytes @ 0x5
   731                           
   732     0075                     Lcd_Write_String@a:	
   733                           ; 1 bytes @ 0x5
   734                           
   735                           
   736                           ; 2 bytes @ 0x5
   737     0075                     	ds	1
   738     0076                     ??_Lcd_Init:
   739     0076                     ?_Lcd_Set_Cursor:	
   740                           ; 1 bytes @ 0x6
   741                           
   742     0076                     ??___lwdiv:	
   743                           ; 1 bytes @ 0x6
   744                           
   745     0076                     Lcd_Set_Cursor@b:	
   746                           ; 1 bytes @ 0x6
   747                           
   748                           
   749                           ; 1 bytes @ 0x6
   750     0076                     	ds	1
   751     0077                     ??_Lcd_Set_Cursor:
   752     0077                     ??_Lcd_Write_String:	
   753                           ; 1 bytes @ 0x7
   754                           
   755     0077                     Lcd_Set_Cursor@a:	
   756                           ; 1 bytes @ 0x7
   757                           
   758     0077                     ___lwdiv@quotient:	
   759                           ; 1 bytes @ 0x7
   760                           
   761                           
   762                           ; 2 bytes @ 0x7
   763     0077                     	ds	1
   764     0078                     ??_setup:
   765     0078                     Lcd_Set_Cursor@direccion:	
   766                           ; 1 bytes @ 0x8
   767                           
   768                           
   769                           ; 1 bytes @ 0x8
   770     0078                     	ds	1
   771     0079                     ___lwdiv@counter:
   772                           
   773                           ; 1 bytes @ 0x9
   774     0079                     	ds	1
   775     007A                     ??___lwmod:
   776                           
   777                           ; 1 bytes @ 0xA
   778     007A                     	ds	1
   779                           
   780                           	psect	cstackBANK0
   781     0020                     __pcstackBANK0:
   782     0020                     ?___lwmod:
   783     0020                     Lcd_Write_String@i:	
   784                           ; 2 bytes @ 0x0
   785                           
   786     0020                     ___lwmod@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789                           
   790                           ; 2 bytes @ 0x0
   791     0020                     	ds	2
   792     0022                     ___lwmod@dividend:
   793                           
   794                           ; 2 bytes @ 0x2
   795     0022                     	ds	2
   796     0024                     ___lwmod@counter:
   797                           
   798                           ; 1 bytes @ 0x4
   799     0024                     	ds	1
   800     0025                     ?_sprintf:
   801     0025                     sprintf@f:	
   802                           ; 2 bytes @ 0x5
   803                           
   804                           
   805                           ; 1 bytes @ 0x5
   806     0025                     	ds	3
   807     0028                     ??_sprintf:
   808                           
   809                           ; 1 bytes @ 0x8
   810     0028                     	ds	3
   811     002B                     sprintf@ap:
   812                           
   813                           ; 1 bytes @ 0xB
   814     002B                     	ds	1
   815     002C                     sprintf@flag:
   816                           
   817                           ; 1 bytes @ 0xC
   818     002C                     	ds	1
   819     002D                     sprintf@prec:
   820                           
   821                           ; 1 bytes @ 0xD
   822     002D                     	ds	1
   823     002E                     sprintf@val:
   824                           
   825                           ; 2 bytes @ 0xE
   826     002E                     	ds	2
   827     0030                     sprintf@sp:
   828                           
   829                           ; 1 bytes @ 0x10
   830     0030                     	ds	1
   831     0031                     sprintf@c:
   832                           
   833                           ; 1 bytes @ 0x11
   834     0031                     	ds	1
   835     0032                     ??_escrituraLCD:
   836                           
   837                           ; 1 bytes @ 0x12
   838     0032                     	ds	3
   839     0035                     ??_main:
   840                           
   841                           ; 1 bytes @ 0x15
   842     0035                     	ds	2
   843                           
   844                           	psect	maintext
   845     01A1                     __pmaintext:	
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 75 in file "mSPI.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : B00/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       2       0       0       0
   868 ;;      Totals:         0       2       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels required when called: 5
   871 ;; This function calls:
   872 ;;		_escrituraLCD
   873 ;;		_setup
   874 ;;		_spiRead
   875 ;;		_spiWrite
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881     01A1                     _main:	
   882                           ;psect for function _main
   883                           
   884     01A1                     l1721:	
   885                           ;incstack = 0
   886                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   887                           
   888                           
   889                           ;mSPI.c: 76:     setup();
   890     01A1  120A  118A  23E9  120A  118A  	fcall	_setup
   891     01A6                     l1723:
   892                           
   893                           ;mSPI.c: 80:         if(RB0 == 0){
   894     01A6  1283               	bcf	3,5	;RP0=0, select bank0
   895     01A7  1303               	bcf	3,6	;RP1=0, select bank0
   896     01A8  1806               	btfsc	6,0	;volatile
   897     01A9  29AB               	goto	u991
   898     01AA  29AC               	goto	u990
   899     01AB                     u991:
   900     01AB  29B9               	goto	l1733
   901     01AC                     u990:
   902     01AC                     l161:
   903     01AC  1C06               	btfss	6,0	;volatile
   904     01AD  29AF               	goto	u1001
   905     01AE  29B0               	goto	u1000
   906     01AF                     u1001:
   907     01AF  29AC               	goto	l161
   908     01B0                     u1000:
   909     01B0                     l1727:
   910                           
   911                           ;mSPI.c: 83:             if(tipo == 0)
   912     01B0  087B               	movf	_tipo,w
   913     01B1  1D03               	btfss	3,2
   914     01B2  29B4               	goto	u1011
   915     01B3  29B5               	goto	u1010
   916     01B4                     u1011:
   917     01B4  29B8               	goto	l1731
   918     01B5                     u1010:
   919     01B5                     l1729:
   920                           
   921                           ;mSPI.c: 84:                 tipo=1;
   922     01B5  01FB               	clrf	_tipo
   923     01B6  0AFB               	incf	_tipo,f
   924     01B7  29B9               	goto	l1733
   925     01B8                     l1731:
   926                           
   927                           ;mSPI.c: 86:                 tipo=0;
   928     01B8  01FB               	clrf	_tipo
   929     01B9                     l1733:
   930                           
   931                           ;mSPI.c: 93:        PORTCbits.RC2 = 0;
   932     01B9  1107               	bcf	7,2	;volatile
   933     01BA                     l1735:
   934                           
   935                           ;mSPI.c: 94:        _delay((unsigned long)((1)*(8000000/4000.0)));
   936     01BA  3003               	movlw	3
   937     01BB  1283               	bcf	3,5	;RP0=0, select bank0
   938     01BC  1303               	bcf	3,6	;RP1=0, select bank0
   939     01BD  00B6               	movwf	??_main+1
   940     01BE  3097               	movlw	151
   941     01BF  00B5               	movwf	??_main
   942     01C0                     u1047:
   943     01C0  0BB5               	decfsz	??_main,f
   944     01C1  29C0               	goto	u1047
   945     01C2  0BB6               	decfsz	??_main+1,f
   946     01C3  29C0               	goto	u1047
   947     01C4                     l1737:
   948                           
   949                           ;mSPI.c: 96:        spiWrite(tipo);
   950     01C4  087B               	movf	_tipo,w
   951     01C5  120A  118A  24AA  120A  118A  	fcall	_spiWrite
   952     01CA                     l1739:
   953                           
   954                           ;mSPI.c: 97:        temp1 = spiRead();
   955     01CA  120A  118A  248B  120A  118A  	fcall	_spiRead
   956     01CF  1283               	bcf	3,5	;RP0=0, select bank0
   957     01D0  1303               	bcf	3,6	;RP1=0, select bank0
   958     01D1  00B9               	movwf	_temp1
   959     01D2                     l1741:
   960                           
   961                           ;mSPI.c: 99:        _delay((unsigned long)((1)*(8000000/4000.0)));
   962     01D2  3003               	movlw	3
   963     01D3  1283               	bcf	3,5	;RP0=0, select bank0
   964     01D4  1303               	bcf	3,6	;RP1=0, select bank0
   965     01D5  00B6               	movwf	??_main+1
   966     01D6  3097               	movlw	151
   967     01D7  00B5               	movwf	??_main
   968     01D8                     u1057:
   969     01D8  0BB5               	decfsz	??_main,f
   970     01D9  29D8               	goto	u1057
   971     01DA  0BB6               	decfsz	??_main+1,f
   972     01DB  29D8               	goto	u1057
   973     01DC                     l1743:
   974                           
   975                           ;mSPI.c: 100:        PORTCbits.RC2 = 1;
   976     01DC  1283               	bcf	3,5	;RP0=0, select bank0
   977     01DD  1303               	bcf	3,6	;RP1=0, select bank0
   978     01DE  1507               	bsf	7,2	;volatile
   979     01DF                     l1745:
   980                           
   981                           ;mSPI.c: 104:     if(tipo == 0){
   982     01DF  087B               	movf	_tipo,w
   983     01E0  1D03               	btfss	3,2
   984     01E1  29E3               	goto	u1021
   985     01E2  29E4               	goto	u1020
   986     01E3                     u1021:
   987     01E3  2A0A               	goto	l1757
   988     01E4                     u1020:
   989     01E4                     l1747:
   990                           
   991                           ;mSPI.c: 105:        PORTCbits.RC1 = 0;
   992     01E4  1087               	bcf	7,1	;volatile
   993     01E5                     l1749:
   994                           
   995                           ;mSPI.c: 106:        _delay((unsigned long)((1)*(8000000/4000.0)));
   996     01E5  3003               	movlw	3
   997     01E6  1283               	bcf	3,5	;RP0=0, select bank0
   998     01E7  1303               	bcf	3,6	;RP1=0, select bank0
   999     01E8  00B6               	movwf	??_main+1
  1000     01E9  3097               	movlw	151
  1001     01EA  00B5               	movwf	??_main
  1002     01EB                     u1067:
  1003     01EB  0BB5               	decfsz	??_main,f
  1004     01EC  29EB               	goto	u1067
  1005     01ED  0BB6               	decfsz	??_main+1,f
  1006     01EE  29EB               	goto	u1067
  1007     01EF                     l1751:
  1008                           
  1009                           ;mSPI.c: 108:        spiWrite(tipo);
  1010     01EF  087B               	movf	_tipo,w
  1011     01F0  120A  118A  24AA  120A  118A  	fcall	_spiWrite
  1012     01F5                     l1753:
  1013                           
  1014                           ;mSPI.c: 109:        temp2 = spiRead();
  1015     01F5  120A  118A  248B  120A  118A  	fcall	_spiRead
  1016     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1017     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1018     01FC  00B8               	movwf	_temp2
  1019                           
  1020                           ;mSPI.c: 111:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1021     01FD  3003               	movlw	3
  1022     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1023     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0200  00B6               	movwf	??_main+1
  1025     0201  3097               	movlw	151
  1026     0202  00B5               	movwf	??_main
  1027     0203                     u1077:
  1028     0203  0BB5               	decfsz	??_main,f
  1029     0204  2A03               	goto	u1077
  1030     0205  0BB6               	decfsz	??_main+1,f
  1031     0206  2A03               	goto	u1077
  1032     0207                     l1755:
  1033                           
  1034                           ;mSPI.c: 112:        PORTCbits.RC1 = 1;
  1035     0207  1283               	bcf	3,5	;RP0=0, select bank0
  1036     0208  1303               	bcf	3,6	;RP1=0, select bank0
  1037     0209  1487               	bsf	7,1	;volatile
  1038     020A                     l1757:
  1039                           
  1040                           ;mSPI.c: 116:     if(tipo == 1){
  1041     020A  037B               	decf	_tipo,w
  1042     020B  1D03               	btfss	3,2
  1043     020C  2A0E               	goto	u1031
  1044     020D  2A0F               	goto	u1030
  1045     020E                     u1031:
  1046     020E  2A35               	goto	l1769
  1047     020F                     u1030:
  1048     020F                     l1759:
  1049                           
  1050                           ;mSPI.c: 117:        PORTCbits.RC1 = 0;
  1051     020F  1087               	bcf	7,1	;volatile
  1052     0210                     l1761:
  1053                           
  1054                           ;mSPI.c: 118:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1055     0210  3003               	movlw	3
  1056     0211  1283               	bcf	3,5	;RP0=0, select bank0
  1057     0212  1303               	bcf	3,6	;RP1=0, select bank0
  1058     0213  00B6               	movwf	??_main+1
  1059     0214  3097               	movlw	151
  1060     0215  00B5               	movwf	??_main
  1061     0216                     u1087:
  1062     0216  0BB5               	decfsz	??_main,f
  1063     0217  2A16               	goto	u1087
  1064     0218  0BB6               	decfsz	??_main+1,f
  1065     0219  2A16               	goto	u1087
  1066     021A                     l1763:
  1067                           
  1068                           ;mSPI.c: 120:        spiWrite(tipo);
  1069     021A  087B               	movf	_tipo,w
  1070     021B  120A  118A  24AA  120A  118A  	fcall	_spiWrite
  1071     0220                     l1765:
  1072                           
  1073                           ;mSPI.c: 121:        temp3 = spiRead();
  1074     0220  120A  118A  248B  120A  118A  	fcall	_spiRead
  1075     0225  1283               	bcf	3,5	;RP0=0, select bank0
  1076     0226  1303               	bcf	3,6	;RP1=0, select bank0
  1077     0227  00B7               	movwf	_temp3
  1078                           
  1079                           ;mSPI.c: 123:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1080     0228  3003               	movlw	3
  1081     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1082     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1083     022B  00B6               	movwf	??_main+1
  1084     022C  3097               	movlw	151
  1085     022D  00B5               	movwf	??_main
  1086     022E                     u1097:
  1087     022E  0BB5               	decfsz	??_main,f
  1088     022F  2A2E               	goto	u1097
  1089     0230  0BB6               	decfsz	??_main+1,f
  1090     0231  2A2E               	goto	u1097
  1091     0232                     l1767:
  1092                           
  1093                           ;mSPI.c: 124:        PORTCbits.RC1 = 1;
  1094     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0234  1487               	bsf	7,1	;volatile
  1097     0235                     l1769:
  1098                           
  1099                           ;mSPI.c: 129:         escrituraLCD();
  1100     0235  120A  118A  20F9  120A  118A  	fcall	_escrituraLCD
  1101     023A  29A6               	goto	l1723
  1102     023B  120A  118A  280C   	ljmp	start
  1103     023E                     __end_of_main:
  1104                           
  1105                           	psect	text1
  1106     04AA                     __ptext1:	
  1107 ;; *************** function _spiWrite *****************
  1108 ;; Defined at:
  1109 ;;		line 26 in file "SPI.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  dat             1    wreg     unsigned char 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  dat             1    2[COMMON] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         1       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         1       0       0       0       0
  1127 ;;Total ram usage:        1 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137     04AA                     _spiWrite:	
  1138                           ;psect for function _spiWrite
  1139                           
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _spiWrite: [wreg]
  1143                           ;spiWrite@dat stored from wreg
  1144     04AA  00F2               	movwf	spiWrite@dat
  1145     04AB                     l1445:
  1146                           
  1147                           ;SPI.c: 26: void spiWrite(char dat);SPI.c: 27: {;SPI.c: 28:     SSPBUF = dat;
  1148     04AB  0872               	movf	spiWrite@dat,w
  1149     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1150     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1151     04AE  0093               	movwf	19	;volatile
  1152     04AF                     l26:
  1153     04AF  0008               	return
  1154     04B0                     __end_of_spiWrite:
  1155                           
  1156                           	psect	text2
  1157     048B                     __ptext2:	
  1158 ;; *************** function _spiRead *****************
  1159 ;; Defined at:
  1160 ;;		line 39 in file "SPI.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      unsigned char 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 2
  1181 ;; This function calls:
  1182 ;;		_spiReceiveWait
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     048B                     _spiRead:	
  1189                           ;psect for function _spiRead
  1190                           
  1191     048B                     l1447:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1194                           
  1195                           
  1196                           ;SPI.c: 41:     spiReceiveWait();
  1197     048B  120A  118A  249C  120A  118A  	fcall	_spiReceiveWait
  1198     0490                     l1449:
  1199                           
  1200                           ;SPI.c: 42:     return(SSPBUF);
  1201     0490  1283               	bcf	3,5	;RP0=0, select bank0
  1202     0491  1303               	bcf	3,6	;RP1=0, select bank0
  1203     0492  0813               	movf	19,w	;volatile
  1204     0493                     l34:
  1205     0493  0008               	return
  1206     0494                     __end_of_spiRead:
  1207                           
  1208                           	psect	text3
  1209     049C                     __ptext3:	
  1210 ;; *************** function _spiReceiveWait *****************
  1211 ;; Defined at:
  1212 ;;		line 21 in file "SPI.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		None
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_spiRead
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240     049C                     _spiReceiveWait:	
  1241                           ;psect for function _spiReceiveWait
  1242                           
  1243     049C                     l1283:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _spiReceiveWait: []
  1246                           
  1247     049C                     l20:	
  1248                           ;SPI.c: 23:     while ( !SSPSTATbits.BF );
  1249                           
  1250     049C  1683               	bsf	3,5	;RP0=1, select bank1
  1251     049D  1303               	bcf	3,6	;RP1=0, select bank1
  1252     049E  1C14               	btfss	20,0	;volatile
  1253     049F  2CA1               	goto	u551
  1254     04A0  2CA2               	goto	u550
  1255     04A1                     u551:
  1256     04A1  2C9C               	goto	l20
  1257     04A2                     u550:
  1258     04A2                     l23:
  1259     04A2  0008               	return
  1260     04A3                     __end_of_spiReceiveWait:
  1261                           
  1262                           	psect	text4
  1263     03E9                     __ptext4:	
  1264 ;; *************** function _setup *****************
  1265 ;; Defined at:
  1266 ;;		line 139 in file "mSPI.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 4
  1287 ;; This function calls:
  1288 ;;		_Lcd_Init
  1289 ;;		_configIntbits
  1290 ;;		_configOsc
  1291 ;;		_configPort
  1292 ;;		_pullup
  1293 ;;		_spiInit
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     03E9                     _setup:	
  1300                           ;psect for function _setup
  1301                           
  1302     03E9                     l1693:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1305                           
  1306                           
  1307                           ;mSPI.c: 141:     configOsc(8);
  1308     03E9  3008               	movlw	8
  1309     03EA  00F2               	movwf	configOsc@freq
  1310     03EB  3000               	movlw	0
  1311     03EC  00F3               	movwf	configOsc@freq+1
  1312     03ED  120A  118A  223E  120A  118A  	fcall	_configOsc
  1313                           
  1314                           ;mSPI.c: 142:     configPort();
  1315     03F2  120A  118A  2476  120A  118A  	fcall	_configPort
  1316                           
  1317                           ;mSPI.c: 143:     pullup();
  1318     03F7  120A  118A  24B0  120A  118A  	fcall	_pullup
  1319                           
  1320                           ;mSPI.c: 144:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1321     03FC  01F2               	clrf	spiInit@sDataSample
  1322     03FD  01F3               	clrf	spiInit@sClockIdle
  1323     03FE  01F4               	clrf	spiInit@sTransmitEdge
  1324     03FF  3020               	movlw	32
  1325     0400  120A  118A  244A  120A  118A  	fcall	_spiInit
  1326                           
  1327                           ;mSPI.c: 145:     Lcd_Init();
  1328     0405  120A  118A  22AF  120A  118A  	fcall	_Lcd_Init
  1329     040A                     l1695:
  1330                           
  1331                           ;mSPI.c: 146:     configIntbits();
  1332     040A  120A  118A  24BC  120A  118A  	fcall	_configIntbits
  1333     040F                     l173:
  1334     040F  0008               	return
  1335     0410                     __end_of_setup:
  1336                           
  1337                           	psect	text5
  1338     044A                     __ptext5:	
  1339 ;; *************** function _spiInit *****************
  1340 ;; Defined at:
  1341 ;;		line 4 in file "SPI.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  sType           1    wreg     enum E1292
  1344 ;;  sDataSample     1    2[COMMON] enum E1300
  1345 ;;  sClockIdle      1    3[COMMON] enum E1304
  1346 ;;  sTransmitEdg    1    4[COMMON] enum E1308
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  sType           1    5[COMMON] enum E1292
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         3       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         4       0       0       0       0
  1362 ;;Total ram usage:        4 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_setup
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372     044A                     _spiInit:	
  1373                           ;psect for function _spiInit
  1374                           
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1378                           ;spiInit@sType stored from wreg
  1379     044A  00F5               	movwf	spiInit@sType
  1380     044B                     l1273:
  1381                           
  1382                           ;SPI.c: 4: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 5: {;SPI.c: 6:     TRISC5 = 0;
  1383     044B  1683               	bsf	3,5	;RP0=1, select bank1
  1384     044C  1303               	bcf	3,6	;RP1=0, select bank1
  1385     044D  1287               	bcf	7,5	;volatile
  1386                           
  1387                           ;SPI.c: 7:     if(sType & 0b00000100)
  1388     044E  1D75               	btfss	spiInit@sType,2
  1389     044F  2C51               	goto	u541
  1390     0450  2C52               	goto	u540
  1391     0451                     u541:
  1392     0451  2C56               	goto	l1279
  1393     0452                     u540:
  1394     0452                     l1275:
  1395                           
  1396                           ;SPI.c: 8:     {;SPI.c: 9:         SSPSTAT = sTransmitEdge;
  1397     0452  0874               	movf	spiInit@sTransmitEdge,w
  1398     0453  0094               	movwf	20	;volatile
  1399     0454                     l1277:
  1400                           
  1401                           ;SPI.c: 10:         TRISC3 = 1;
  1402     0454  1587               	bsf	7,3	;volatile
  1403                           
  1404                           ;SPI.c: 11:     }
  1405     0455  2C5A               	goto	l16
  1406     0456                     l1279:
  1407                           
  1408                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sDataSample | sTransmitEdge;
  1409     0456  0872               	movf	spiInit@sDataSample,w
  1410     0457  0474               	iorwf	spiInit@sTransmitEdge,w
  1411     0458  0094               	movwf	20	;volatile
  1412     0459                     l1281:
  1413                           
  1414                           ;SPI.c: 15:         TRISC3 = 0;
  1415     0459  1187               	bcf	7,3	;volatile
  1416     045A                     l16:	
  1417                           ;SPI.c: 16:     }
  1418                           
  1419                           
  1420                           ;SPI.c: 18:     SSPCON = sType | sClockIdle;
  1421     045A  0875               	movf	spiInit@sType,w
  1422     045B  0473               	iorwf	spiInit@sClockIdle,w
  1423     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1424     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1425     045E  0094               	movwf	20	;volatile
  1426     045F                     l17:
  1427     045F  0008               	return
  1428     0460                     __end_of_spiInit:
  1429                           
  1430                           	psect	text6
  1431     04B0                     __ptext6:	
  1432 ;; *************** function _pullup *****************
  1433 ;; Defined at:
  1434 ;;		line 26 in file "config.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_setup
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462     04B0                     _pullup:	
  1463                           ;psect for function _pullup
  1464                           
  1465     04B0                     l1309:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _pullup: [wreg]
  1468                           
  1469                           
  1470                           ;config.c: 27:     OPTION_REGbits.nRBPU = 0;
  1471     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  1472     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  1473     04B2  1381               	bcf	1,7	;volatile
  1474     04B3                     l1311:
  1475                           
  1476                           ;config.c: 28:     WPUBbits.WPUB = 0b11111111;
  1477     04B3  30FF               	movlw	255
  1478     04B4  0095               	movwf	21	;volatile
  1479     04B5                     l76:
  1480     04B5  0008               	return
  1481     04B6                     __end_of_pullup:
  1482                           
  1483                           	psect	text7
  1484     0476                     __ptext7:	
  1485 ;; *************** function _configPort *****************
  1486 ;; Defined at:
  1487 ;;		line 3 in file "config.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_setup
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515     0476                     _configPort:	
  1516                           ;psect for function _configPort
  1517                           
  1518     0476                     l1285:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _configPort: [wreg+status,2]
  1521                           
  1522                           
  1523                           ;config.c: 5:     ANSEL = 0;
  1524     0476  1683               	bsf	3,5	;RP0=1, select bank3
  1525     0477  1703               	bsf	3,6	;RP1=1, select bank3
  1526     0478  0188               	clrf	8	;volatile
  1527                           
  1528                           ;config.c: 6:     ANSELH = 0;
  1529     0479  0189               	clrf	9	;volatile
  1530     047A                     l1287:
  1531                           
  1532                           ;config.c: 8:     TRISC1 = 0;
  1533     047A  1683               	bsf	3,5	;RP0=1, select bank1
  1534     047B  1303               	bcf	3,6	;RP1=0, select bank1
  1535     047C  1087               	bcf	7,1	;volatile
  1536     047D                     l1289:
  1537                           
  1538                           ;config.c: 9:     TRISC2 = 0;
  1539     047D  1107               	bcf	7,2	;volatile
  1540                           
  1541                           ;config.c: 10:     TRISA = 0b00000000;
  1542     047E  0185               	clrf	5	;volatile
  1543     047F                     l1291:
  1544                           
  1545                           ;config.c: 11:     TRISB = 0b11111111;
  1546     047F  30FF               	movlw	255
  1547     0480  0086               	movwf	6	;volatile
  1548     0481                     l1293:
  1549                           
  1550                           ;config.c: 12:     TRISD = 0b00000000;
  1551     0481  0188               	clrf	8	;volatile
  1552     0482                     l1295:
  1553                           
  1554                           ;config.c: 13:     TRISE = 0;
  1555     0482  0189               	clrf	9	;volatile
  1556     0483                     l1297:
  1557                           
  1558                           ;config.c: 15:     PORTA = 0;
  1559     0483  1283               	bcf	3,5	;RP0=0, select bank0
  1560     0484  1303               	bcf	3,6	;RP1=0, select bank0
  1561     0485  0185               	clrf	5	;volatile
  1562     0486                     l1299:
  1563                           
  1564                           ;config.c: 16:     PORTB = 0;
  1565     0486  0186               	clrf	6	;volatile
  1566     0487                     l1301:
  1567                           
  1568                           ;config.c: 17:     PORTD = 0;
  1569     0487  0188               	clrf	8	;volatile
  1570     0488                     l1303:
  1571                           
  1572                           ;config.c: 18:     PORTE = 0;
  1573     0488  0189               	clrf	9	;volatile
  1574     0489                     l1305:
  1575                           
  1576                           ;config.c: 19:     PORTCbits.RC2 = 1;
  1577     0489  1507               	bsf	7,2	;volatile
  1578     048A                     l73:
  1579     048A  0008               	return
  1580     048B                     __end_of_configPort:
  1581                           
  1582                           	psect	text8
  1583     023E                     __ptext8:	
  1584 ;; *************** function _configOsc *****************
  1585 ;; Defined at:
  1586 ;;		line 44 in file "config.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  freq            2    2[COMMON] unsigned int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         2       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0
  1603 ;;      Totals:         2       0       0       0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_setup
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614     023E                     _configOsc:	
  1615                           ;psect for function _configOsc
  1616                           
  1617     023E                     l1317:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  1620                           
  1621                           
  1622                           ;config.c: 45:     if(freq == 8){
  1623     023E  3008               	movlw	8
  1624     023F  0672               	xorwf	configOsc@freq,w
  1625     0240  0473               	iorwf	configOsc@freq+1,w
  1626     0241  1D03               	btfss	3,2
  1627     0242  2A44               	goto	u561
  1628     0243  2A45               	goto	u560
  1629     0244                     u561:
  1630     0244  2A4A               	goto	l1321
  1631     0245                     u560:
  1632     0245                     l1319:
  1633                           
  1634                           ;config.c: 46:         OSCCONbits.IRCF = 0b111;
  1635     0245  3070               	movlw	112
  1636     0246  1683               	bsf	3,5	;RP0=1, select bank1
  1637     0247  1303               	bcf	3,6	;RP1=0, select bank1
  1638     0248  048F               	iorwf	15,f	;volatile
  1639                           
  1640                           ;config.c: 47:     }
  1641     0249  2AAB               	goto	l1349
  1642     024A                     l1321:
  1643     024A  3004               	movlw	4
  1644     024B  0672               	xorwf	configOsc@freq,w
  1645     024C  0473               	iorwf	configOsc@freq+1,w
  1646     024D  1D03               	btfss	3,2
  1647     024E  2A50               	goto	u571
  1648     024F  2A51               	goto	u570
  1649     0250                     u571:
  1650     0250  2A58               	goto	l1325
  1651     0251                     u570:
  1652     0251                     l1323:
  1653                           
  1654                           ;config.c: 50:         OSCCONbits.IRCF = 0b110;
  1655     0251  1683               	bsf	3,5	;RP0=1, select bank1
  1656     0252  1303               	bcf	3,6	;RP1=0, select bank1
  1657     0253  080F               	movf	15,w	;volatile
  1658     0254  398F               	andlw	-113
  1659     0255  3860               	iorlw	96
  1660     0256  008F               	movwf	15	;volatile
  1661                           
  1662                           ;config.c: 51:     }
  1663     0257  2AAB               	goto	l1349
  1664     0258                     l1325:
  1665     0258  3002               	movlw	2
  1666     0259  0672               	xorwf	configOsc@freq,w
  1667     025A  0473               	iorwf	configOsc@freq+1,w
  1668     025B  1D03               	btfss	3,2
  1669     025C  2A5E               	goto	u581
  1670     025D  2A5F               	goto	u580
  1671     025E                     u581:
  1672     025E  2A66               	goto	l1329
  1673     025F                     u580:
  1674     025F                     l1327:
  1675                           
  1676                           ;config.c: 54:         OSCCONbits.IRCF = 0b101;
  1677     025F  1683               	bsf	3,5	;RP0=1, select bank1
  1678     0260  1303               	bcf	3,6	;RP1=0, select bank1
  1679     0261  080F               	movf	15,w	;volatile
  1680     0262  398F               	andlw	-113
  1681     0263  3850               	iorlw	80
  1682     0264  008F               	movwf	15	;volatile
  1683                           
  1684                           ;config.c: 55:     }
  1685     0265  2AAB               	goto	l1349
  1686     0266                     l1329:
  1687     0266  0372               	decf	configOsc@freq,w
  1688     0267  0473               	iorwf	configOsc@freq+1,w
  1689     0268  1D03               	btfss	3,2
  1690     0269  2A6B               	goto	u591
  1691     026A  2A6C               	goto	u590
  1692     026B                     u591:
  1693     026B  2A73               	goto	l1333
  1694     026C                     u590:
  1695     026C                     l1331:
  1696                           
  1697                           ;config.c: 58:         OSCCONbits.IRCF = 0b100;
  1698     026C  1683               	bsf	3,5	;RP0=1, select bank1
  1699     026D  1303               	bcf	3,6	;RP1=0, select bank1
  1700     026E  080F               	movf	15,w	;volatile
  1701     026F  398F               	andlw	-113
  1702     0270  3840               	iorlw	64
  1703     0271  008F               	movwf	15	;volatile
  1704                           
  1705                           ;config.c: 59:     }
  1706     0272  2AAB               	goto	l1349
  1707     0273                     l1333:
  1708     0273  30F4               	movlw	244
  1709     0274  0672               	xorwf	configOsc@freq,w
  1710     0275  1D03               	skipz
  1711     0276  2A7B               	goto	u601
  1712     0277  0373               	decf	configOsc@freq+1,w
  1713     0278  1D03               	btfss	3,2
  1714     0279  2A7B               	goto	u601
  1715     027A  2A7C               	goto	u600
  1716     027B                     u601:
  1717     027B  2A83               	goto	l1337
  1718     027C                     u600:
  1719     027C                     l1335:
  1720                           
  1721                           ;config.c: 62:         OSCCONbits.IRCF = 0b011;
  1722     027C  1683               	bsf	3,5	;RP0=1, select bank1
  1723     027D  1303               	bcf	3,6	;RP1=0, select bank1
  1724     027E  080F               	movf	15,w	;volatile
  1725     027F  398F               	andlw	-113
  1726     0280  3830               	iorlw	48
  1727     0281  008F               	movwf	15	;volatile
  1728                           
  1729                           ;config.c: 63:     }
  1730     0282  2AAB               	goto	l1349
  1731     0283                     l1337:
  1732     0283  30FA               	movlw	250
  1733     0284  0672               	xorwf	configOsc@freq,w
  1734     0285  0473               	iorwf	configOsc@freq+1,w
  1735     0286  1D03               	btfss	3,2
  1736     0287  2A89               	goto	u611
  1737     0288  2A8A               	goto	u610
  1738     0289                     u611:
  1739     0289  2A91               	goto	l1341
  1740     028A                     u610:
  1741     028A                     l1339:
  1742                           
  1743                           ;config.c: 66:         OSCCONbits.IRCF = 0b010;
  1744     028A  1683               	bsf	3,5	;RP0=1, select bank1
  1745     028B  1303               	bcf	3,6	;RP1=0, select bank1
  1746     028C  080F               	movf	15,w	;volatile
  1747     028D  398F               	andlw	-113
  1748     028E  3820               	iorlw	32
  1749     028F  008F               	movwf	15	;volatile
  1750                           
  1751                           ;config.c: 67:     }
  1752     0290  2AAB               	goto	l1349
  1753     0291                     l1341:
  1754     0291  307D               	movlw	125
  1755     0292  0672               	xorwf	configOsc@freq,w
  1756     0293  0473               	iorwf	configOsc@freq+1,w
  1757     0294  1D03               	btfss	3,2
  1758     0295  2A97               	goto	u621
  1759     0296  2A98               	goto	u620
  1760     0297                     u621:
  1761     0297  2A9F               	goto	l1345
  1762     0298                     u620:
  1763     0298                     l1343:
  1764                           
  1765                           ;config.c: 70:         OSCCONbits.IRCF = 0b001;
  1766     0298  1683               	bsf	3,5	;RP0=1, select bank1
  1767     0299  1303               	bcf	3,6	;RP1=0, select bank1
  1768     029A  080F               	movf	15,w	;volatile
  1769     029B  398F               	andlw	-113
  1770     029C  3810               	iorlw	16
  1771     029D  008F               	movwf	15	;volatile
  1772                           
  1773                           ;config.c: 71:     }
  1774     029E  2AAB               	goto	l1349
  1775     029F                     l1345:
  1776     029F  301F               	movlw	31
  1777     02A0  0672               	xorwf	configOsc@freq,w
  1778     02A1  0473               	iorwf	configOsc@freq+1,w
  1779     02A2  1D03               	btfss	3,2
  1780     02A3  2AA5               	goto	u631
  1781     02A4  2AA6               	goto	u630
  1782     02A5                     u631:
  1783     02A5  2AAB               	goto	l91
  1784     02A6                     u630:
  1785     02A6                     l1347:
  1786                           
  1787                           ;config.c: 74:         OSCCONbits.IRCF = 0b000;
  1788     02A6  308F               	movlw	-113
  1789     02A7  1683               	bsf	3,5	;RP0=1, select bank1
  1790     02A8  1303               	bcf	3,6	;RP1=0, select bank1
  1791     02A9  058F               	andwf	15,f	;volatile
  1792     02AA  2AAB               	goto	l1349
  1793     02AB                     l91:
  1794     02AB                     l1349:
  1795                           
  1796                           ;config.c: 77:     OSCCONbits.SCS = 1;
  1797     02AB  1683               	bsf	3,5	;RP0=1, select bank1
  1798     02AC  1303               	bcf	3,6	;RP1=0, select bank1
  1799     02AD  140F               	bsf	15,0	;volatile
  1800     02AE                     l97:
  1801     02AE  0008               	return
  1802     02AF                     __end_of_configOsc:
  1803                           
  1804                           	psect	text9
  1805     04BC                     __ptext9:	
  1806 ;; *************** function _configIntbits *****************
  1807 ;; Defined at:
  1808 ;;		line 35 in file "config.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		None
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_setup
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836     04BC                     _configIntbits:	
  1837                           ;psect for function _configIntbits
  1838                           
  1839     04BC                     l1315:	
  1840                           ;incstack = 0
  1841                           ; Regs used in _configIntbits: []
  1842                           
  1843                           
  1844                           ;config.c: 36:     INTCONbits.GIE = 1;
  1845     04BC  178B               	bsf	11,7	;volatile
  1846                           
  1847                           ;config.c: 37:     INTCONbits.PEIE = 1;
  1848     04BD  170B               	bsf	11,6	;volatile
  1849     04BE                     l79:	
  1850                           ;config.c: 39:     return;
  1851                           
  1852     04BE  0008               	return
  1853     04BF                     __end_of_configIntbits:
  1854                           
  1855                           	psect	text10
  1856     02AF                     __ptext10:	
  1857 ;; *************** function _Lcd_Init *****************
  1858 ;; Defined at:
  1859 ;;		line 42 in file "LCD.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0
  1875 ;;      Temps:          2       0       0       0       0
  1876 ;;      Totals:         2       0       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 3
  1880 ;; This function calls:
  1881 ;;		_Lcd_Cmd
  1882 ;;		_Lcd_Port
  1883 ;; This function is called by:
  1884 ;;		_setup
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888     02AF                     _Lcd_Init:	
  1889                           ;psect for function _Lcd_Init
  1890                           
  1891     02AF                     l1601:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1894                           
  1895                           
  1896                           ;LCD.c: 43:     Lcd_Port(0x00);
  1897     02AF  3000               	movlw	0
  1898     02B0  120A  118A  24B6  120A  118A  	fcall	_Lcd_Port
  1899     02B5                     l1603:
  1900                           
  1901                           ;LCD.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1902     02B5  3034               	movlw	52
  1903     02B6  00F7               	movwf	??_Lcd_Init+1
  1904     02B7  30F1               	movlw	241
  1905     02B8  00F6               	movwf	??_Lcd_Init
  1906     02B9                     u1107:
  1907     02B9  0BF6               	decfsz	??_Lcd_Init,f
  1908     02BA  2AB9               	goto	u1107
  1909     02BB  0BF7               	decfsz	??_Lcd_Init+1,f
  1910     02BC  2AB9               	goto	u1107
  1911     02BD  2ABE               	nop2
  1912     02BE                     l1605:
  1913                           
  1914                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  1915     02BE  3030               	movlw	48
  1916     02BF  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1917                           
  1918                           ;LCD.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1919     02C4  300D               	movlw	13
  1920     02C5  00F7               	movwf	??_Lcd_Init+1
  1921     02C6  30FB               	movlw	251
  1922     02C7  00F6               	movwf	??_Lcd_Init
  1923     02C8                     u1117:
  1924     02C8  0BF6               	decfsz	??_Lcd_Init,f
  1925     02C9  2AC8               	goto	u1117
  1926     02CA  0BF7               	decfsz	??_Lcd_Init+1,f
  1927     02CB  2AC8               	goto	u1117
  1928     02CC  2ACD               	nop2
  1929     02CD                     l1607:
  1930                           
  1931                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  1932     02CD  3030               	movlw	48
  1933     02CE  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1934     02D3                     l1609:
  1935                           
  1936                           ;LCD.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1937     02D3  301D               	movlw	29
  1938     02D4  00F7               	movwf	??_Lcd_Init+1
  1939     02D5  3091               	movlw	145
  1940     02D6  00F6               	movwf	??_Lcd_Init
  1941     02D7                     u1127:
  1942     02D7  0BF6               	decfsz	??_Lcd_Init,f
  1943     02D8  2AD7               	goto	u1127
  1944     02D9  0BF7               	decfsz	??_Lcd_Init+1,f
  1945     02DA  2AD7               	goto	u1127
  1946                           
  1947                           ;LCD.c: 49:     Lcd_Cmd(0x30);
  1948     02DB  3030               	movlw	48
  1949     02DC  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1950                           
  1951                           ;LCD.c: 51:     Lcd_Cmd(0x3C);
  1952     02E1  303C               	movlw	60
  1953     02E2  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1954                           
  1955                           ;LCD.c: 52:     Lcd_Cmd(0x0C);
  1956     02E7  300C               	movlw	12
  1957     02E8  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1958                           
  1959                           ;LCD.c: 53:     Lcd_Cmd(0x01);
  1960     02ED  3001               	movlw	1
  1961     02EE  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1962                           
  1963                           ;LCD.c: 54:     Lcd_Cmd(0x06);
  1964     02F3  3006               	movlw	6
  1965     02F4  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  1966     02F9                     l202:
  1967     02F9  0008               	return
  1968     02FA                     __end_of_Lcd_Init:
  1969                           
  1970                           	psect	text11
  1971     00F9                     __ptext11:	
  1972 ;; *************** function _escrituraLCD *****************
  1973 ;; Defined at:
  1974 ;;		line 153 in file "mSPI.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0
  1990 ;;      Temps:          0       3       0       0       0
  1991 ;;      Totals:         0       3       0       0       0
  1992 ;;Total ram usage:        3 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 4
  1995 ;; This function calls:
  1996 ;;		_Lcd_Set_Cursor
  1997 ;;		_Lcd_Write_String
  1998 ;;		_sprintf
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004     00F9                     _escrituraLCD:	
  2005                           ;psect for function _escrituraLCD
  2006                           
  2007     00F9                     l1699:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _escrituraLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2010                           
  2011                           
  2012                           ;mSPI.c: 156:     Lcd_Set_Cursor(1,1);
  2013     00F9  01F6               	clrf	Lcd_Set_Cursor@b
  2014     00FA  0AF6               	incf	Lcd_Set_Cursor@b,f
  2015     00FB  3001               	movlw	1
  2016     00FC  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2017     0101                     l1701:
  2018                           
  2019                           ;mSPI.c: 157:     Lcd_Write_String("S1:");
  2020     0101  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2021     0102  00F5               	movwf	Lcd_Write_String@a
  2022     0103  3080               	movlw	128
  2023     0104  00F6               	movwf	Lcd_Write_String@a+1
  2024     0105  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2025     010A                     l1703:
  2026                           
  2027                           ;mSPI.c: 158:     Lcd_Set_Cursor(2,1);
  2028     010A  01F6               	clrf	Lcd_Set_Cursor@b
  2029     010B  0AF6               	incf	Lcd_Set_Cursor@b,f
  2030     010C  3002               	movlw	2
  2031     010D  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2032                           
  2033                           ;mSPI.c: 159:     sprintf(ResSlave1,"%d",temp1);
  2034     0112  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2035     0113  1283               	bcf	3,5	;RP0=0, select bank0
  2036     0114  1303               	bcf	3,6	;RP1=0, select bank0
  2037     0115  00A5               	movwf	sprintf@f
  2038     0116  0839               	movf	_temp1,w
  2039     0117  00B2               	movwf	??_escrituraLCD
  2040     0118  01B3               	clrf	??_escrituraLCD+1
  2041     0119  0832               	movf	??_escrituraLCD,w
  2042     011A  00A6               	movwf	?_sprintf+1
  2043     011B  0833               	movf	??_escrituraLCD+1,w
  2044     011C  00A7               	movwf	?_sprintf+2
  2045     011D  3044               	movlw	(low (_ResSlave1| 0))& (0+255)
  2046     011E  120A  118A  201D  120A  118A  	fcall	_sprintf
  2047                           
  2048                           ;mSPI.c: 160:     Lcd_Write_String(ResSlave1);
  2049     0123  3044               	movlw	(low (_ResSlave1| 0))& (0+255)
  2050     0124  00F5               	movwf	Lcd_Write_String@a
  2051     0125  3000               	movlw	0
  2052     0126  00F6               	movwf	Lcd_Write_String@a+1
  2053     0127  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2054     012C                     l1705:
  2055                           
  2056                           ;mSPI.c: 162:     Lcd_Set_Cursor(1,6);
  2057     012C  3006               	movlw	6
  2058     012D  00F6               	movwf	Lcd_Set_Cursor@b
  2059     012E  3001               	movlw	1
  2060     012F  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2061     0134                     l1707:
  2062                           
  2063                           ;mSPI.c: 163:     Lcd_Write_String("S2:");
  2064     0134  300F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2065     0135  00F5               	movwf	Lcd_Write_String@a
  2066     0136  3080               	movlw	128
  2067     0137  00F6               	movwf	Lcd_Write_String@a+1
  2068     0138  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2069                           
  2070                           ;mSPI.c: 164:     Lcd_Set_Cursor(2,6);
  2071     013D  3006               	movlw	6
  2072     013E  00F6               	movwf	Lcd_Set_Cursor@b
  2073     013F  3002               	movlw	2
  2074     0140  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2075     0145                     l1709:
  2076                           
  2077                           ;mSPI.c: 165:     sprintf(ResSlave2,"%d",temp2);
  2078     0145  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2079     0146  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0147  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0148  00A5               	movwf	sprintf@f
  2082     0149  0838               	movf	_temp2,w
  2083     014A  00B2               	movwf	??_escrituraLCD
  2084     014B  01B3               	clrf	??_escrituraLCD+1
  2085     014C  0832               	movf	??_escrituraLCD,w
  2086     014D  00A6               	movwf	?_sprintf+1
  2087     014E  0833               	movf	??_escrituraLCD+1,w
  2088     014F  00A7               	movwf	?_sprintf+2
  2089     0150  303F               	movlw	(low (_ResSlave2| 0))& (0+255)
  2090     0151  120A  118A  201D  120A  118A  	fcall	_sprintf
  2091     0156                     l1711:
  2092                           
  2093                           ;mSPI.c: 166:     Lcd_Write_String(ResSlave2);
  2094     0156  303F               	movlw	(low (_ResSlave2| 0))& (0+255)
  2095     0157  00F5               	movwf	Lcd_Write_String@a
  2096     0158  3000               	movlw	0
  2097     0159  00F6               	movwf	Lcd_Write_String@a+1
  2098     015A  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2099                           
  2100                           ;mSPI.c: 168:     Lcd_Set_Cursor(1,11);
  2101     015F  300B               	movlw	11
  2102     0160  00F6               	movwf	Lcd_Set_Cursor@b
  2103     0161  3001               	movlw	1
  2104     0162  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2105     0167                     l1713:
  2106                           
  2107                           ;mSPI.c: 169:     Lcd_Write_String("S3:");
  2108     0167  3013               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2109     0168  00F5               	movwf	Lcd_Write_String@a
  2110     0169  3080               	movlw	128
  2111     016A  00F6               	movwf	Lcd_Write_String@a+1
  2112     016B  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2113     0170                     l1715:
  2114                           
  2115                           ;mSPI.c: 170:     Lcd_Set_Cursor(2,11);
  2116     0170  300B               	movlw	11
  2117     0171  00F6               	movwf	Lcd_Set_Cursor@b
  2118     0172  3002               	movlw	2
  2119     0173  120A  118A  2410  120A  118A  	fcall	_Lcd_Set_Cursor
  2120                           
  2121                           ;mSPI.c: 171:     sprintf(ResSlave2C,"%d",temp3);
  2122     0178  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2123     0179  1283               	bcf	3,5	;RP0=0, select bank0
  2124     017A  1303               	bcf	3,6	;RP1=0, select bank0
  2125     017B  00A5               	movwf	sprintf@f
  2126     017C  0837               	movf	_temp3,w
  2127     017D  00B2               	movwf	??_escrituraLCD
  2128     017E  01B3               	clrf	??_escrituraLCD+1
  2129     017F  0832               	movf	??_escrituraLCD,w
  2130     0180  00A6               	movwf	?_sprintf+1
  2131     0181  0833               	movf	??_escrituraLCD+1,w
  2132     0182  00A7               	movwf	?_sprintf+2
  2133     0183  303A               	movlw	(low (_ResSlave2C| 0))& (0+255)
  2134     0184  120A  118A  201D  120A  118A  	fcall	_sprintf
  2135                           
  2136                           ;mSPI.c: 172:     Lcd_Write_String(ResSlave2C);
  2137     0189  303A               	movlw	(low (_ResSlave2C| 0))& (0+255)
  2138     018A  00F5               	movwf	Lcd_Write_String@a
  2139     018B  3000               	movlw	0
  2140     018C  00F6               	movwf	Lcd_Write_String@a+1
  2141     018D  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  2142     0192                     l1717:
  2143                           
  2144                           ;mSPI.c: 174:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2145     0192  3006               	movlw	6
  2146     0193  1283               	bcf	3,5	;RP0=0, select bank0
  2147     0194  1303               	bcf	3,6	;RP1=0, select bank0
  2148     0195  00B4               	movwf	??_escrituraLCD+2
  2149     0196  3013               	movlw	19
  2150     0197  00B3               	movwf	??_escrituraLCD+1
  2151     0198  30AD               	movlw	173
  2152     0199  00B2               	movwf	??_escrituraLCD
  2153     019A                     u1137:
  2154     019A  0BB2               	decfsz	??_escrituraLCD,f
  2155     019B  299A               	goto	u1137
  2156     019C  0BB3               	decfsz	??_escrituraLCD+1,f
  2157     019D  299A               	goto	u1137
  2158     019E  0BB4               	decfsz	??_escrituraLCD+2,f
  2159     019F  299A               	goto	u1137
  2160     01A0                     l176:
  2161     01A0  0008               	return
  2162     01A1                     __end_of_escrituraLCD:
  2163                           
  2164                           	psect	text12
  2165     001D                     __ptext12:	
  2166 ;; *************** function _sprintf *****************
  2167 ;; Defined at:
  2168 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  sp              1    wreg     PTR unsigned char 
  2171 ;;		 -> ResSlave2C(5), ResSlave2(5), ResSlave1(5), 
  2172 ;;  f               1    5[BANK0 ] PTR const unsigned char 
  2173 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  sp              1   16[BANK0 ] PTR unsigned char 
  2176 ;;		 -> ResSlave2C(5), ResSlave2(5), ResSlave1(5), 
  2177 ;;  tmpval          4    0        struct .
  2178 ;;  val             2   14[BANK0 ] unsigned int 
  2179 ;;  cp              2    0        PTR const unsigned char 
  2180 ;;  len             2    0        unsigned int 
  2181 ;;  c               1   17[BANK0 ] unsigned char 
  2182 ;;  prec            1   13[BANK0 ] char 
  2183 ;;  flag            1   12[BANK0 ] unsigned char 
  2184 ;;  ap              1   11[BANK0 ] PTR void [1]
  2185 ;;		 -> ?_sprintf(2), 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2    5[BANK0 ] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       3       0       0       0
  2196 ;;      Locals:         0       7       0       0       0
  2197 ;;      Temps:          0       3       0       0       0
  2198 ;;      Totals:         0      13       0       0       0
  2199 ;;Total ram usage:       13 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 2
  2202 ;; This function calls:
  2203 ;;		___lwdiv
  2204 ;;		___lwmod
  2205 ;; This function is called by:
  2206 ;;		_escrituraLCD
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210     001D                     _sprintf:	
  2211                           ;psect for function _sprintf
  2212                           
  2213                           
  2214                           ;incstack = 0
  2215                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2216                           ;sprintf@sp stored from wreg
  2217     001D  1283               	bcf	3,5	;RP0=0, select bank0
  2218     001E  1303               	bcf	3,6	;RP1=0, select bank0
  2219     001F  00B0               	movwf	sprintf@sp
  2220     0020                     l1631:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2223     0020  3026               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2224     0021  00AB               	movwf	sprintf@ap
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2227     0022  28E4               	goto	l1683
  2228     0023                     l1633:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2231     0023  3025               	movlw	37
  2232     0024  0631               	xorwf	sprintf@c,w
  2233     0025  1903               	btfsc	3,2
  2234     0026  2828               	goto	u921
  2235     0027  2829               	goto	u920
  2236     0028                     u921:
  2237     0028  2833               	goto	l1639
  2238     0029                     u920:
  2239     0029                     l1635:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2242     0029  0830               	movf	sprintf@sp,w
  2243     002A  0084               	movwf	4
  2244     002B  0831               	movf	sprintf@c,w
  2245     002C  1383               	bcf	3,7	;select IRP bank0
  2246     002D  0080               	movwf	0
  2247     002E                     l1637:
  2248     002E  3001               	movlw	1
  2249     002F  00A8               	movwf	??_sprintf
  2250     0030  0828               	movf	??_sprintf,w
  2251     0031  07B0               	addwf	sprintf@sp,f
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2254     0032  28E4               	goto	l1683
  2255     0033                     l1639:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2258     0033  01AC               	clrf	sprintf@flag
  2259     0034                     l1643:	
  2260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2261                           
  2262     0034  3001               	movlw	1
  2263     0035  07A5               	addwf	sprintf@f,f
  2264     0036  30FF               	movlw	-1
  2265     0037  0725               	addwf	sprintf@f,w
  2266     0038  0084               	movwf	4
  2267     0039  120A  118A  23CA  120A  118A  	fcall	stringdir
  2268     003E  00B1               	movwf	sprintf@c
  2269     003F  00A8               	movwf	??_sprintf
  2270     0040  01A9               	clrf	??_sprintf+1
  2271                           
  2272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2273                           ; Switch size 1, requested type "simple"
  2274                           ; Number of cases is 1, Range of values is 0 to 0
  2275                           ; switch strategies available:
  2276                           ; Name         Instructions Cycles
  2277                           ; simple_byte            4     3 (average)
  2278                           ; direct_byte           11     8 (fixed)
  2279                           ; jumptable            260     6 (fixed)
  2280                           ;	Chosen strategy is simple_byte
  2281     0041  0829               	movf	??_sprintf+1,w
  2282     0042  3A00               	xorlw	0	; case 0
  2283     0043  1903               	skipnz
  2284     0044  2846               	goto	l1797
  2285     0045  28E4               	goto	l1683
  2286     0046                     l1797:
  2287                           
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 3, Range of values is 0 to 105
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte           10     6 (average)
  2293                           ; jumptable            260     6 (fixed)
  2294                           ;	Chosen strategy is simple_byte
  2295     0046  0828               	movf	??_sprintf,w
  2296     0047  3A00               	xorlw	0	; case 0
  2297     0048  1903               	skipnz
  2298     0049  28F4               	goto	l1685
  2299     004A  3A64               	xorlw	100	; case 100
  2300     004B  1903               	skipnz
  2301     004C  2851               	goto	l1645
  2302     004D  3A0D               	xorlw	13	; case 105
  2303     004E  1903               	skipnz
  2304     004F  2851               	goto	l1645
  2305     0050  28E4               	goto	l1683
  2306     0051                     l1645:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2309     0051  082B               	movf	sprintf@ap,w
  2310     0052  0084               	movwf	4
  2311     0053  1383               	bcf	3,7	;select IRP bank0
  2312     0054  0800               	movf	0,w
  2313     0055  00AE               	movwf	sprintf@val
  2314     0056  0A84               	incf	4,f
  2315     0057  0800               	movf	0,w
  2316     0058  00AF               	movwf	sprintf@val+1
  2317     0059                     l1647:
  2318     0059  3002               	movlw	2
  2319     005A  00A8               	movwf	??_sprintf
  2320     005B  0828               	movf	??_sprintf,w
  2321     005C  07AB               	addwf	sprintf@ap,f
  2322     005D                     l1649:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2325     005D  1FAF               	btfss	sprintf@val+1,7
  2326     005E  2860               	goto	u931
  2327     005F  2861               	goto	u930
  2328     0060                     u931:
  2329     0060  286A               	goto	l1655
  2330     0061                     u930:
  2331     0061                     l1651:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2334     0061  3003               	movlw	3
  2335     0062  00A8               	movwf	??_sprintf
  2336     0063  0828               	movf	??_sprintf,w
  2337     0064  04AC               	iorwf	sprintf@flag,f
  2338     0065                     l1653:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2341     0065  09AE               	comf	sprintf@val,f
  2342     0066  09AF               	comf	sprintf@val+1,f
  2343     0067  0AAE               	incf	sprintf@val,f
  2344     0068  1903               	skipnz
  2345     0069  0AAF               	incf	sprintf@val+1,f
  2346     006A                     l1655:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2349     006A  01B1               	clrf	sprintf@c
  2350     006B  0AB1               	incf	sprintf@c,f
  2351     006C                     l1661:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2354     006C  0831               	movf	sprintf@c,w
  2355     006D  00A8               	movwf	??_sprintf
  2356     006E  0728               	addwf	??_sprintf,w
  2357     006F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2358     0070  0084               	movwf	4
  2359     0071  120A  118A  23CA  120A  118A  	fcall	stringdir
  2360     0076  00A9               	movwf	??_sprintf+1
  2361     0077  120A  118A  23CA  120A  118A  	fcall	stringdir
  2362     007C  00AA               	movwf	??_sprintf+2
  2363     007D  082A               	movf	??_sprintf+2,w
  2364     007E  022F               	subwf	sprintf@val+1,w
  2365     007F  1D03               	skipz
  2366     0080  2883               	goto	u945
  2367     0081  0829               	movf	??_sprintf+1,w
  2368     0082  022E               	subwf	sprintf@val,w
  2369     0083                     u945:
  2370     0083  1803               	skipnc
  2371     0084  2886               	goto	u941
  2372     0085  2887               	goto	u940
  2373     0086                     u941:
  2374     0086  2888               	goto	l1665
  2375     0087                     u940:
  2376     0087  2892               	goto	l1667
  2377     0088                     l1665:
  2378     0088  3001               	movlw	1
  2379     0089  00A8               	movwf	??_sprintf
  2380     008A  0828               	movf	??_sprintf,w
  2381     008B  07B1               	addwf	sprintf@c,f
  2382     008C  3005               	movlw	5
  2383     008D  0631               	xorwf	sprintf@c,w
  2384     008E  1D03               	btfss	3,2
  2385     008F  2891               	goto	u951
  2386     0090  2892               	goto	u950
  2387     0091                     u951:
  2388     0091  286C               	goto	l1661
  2389     0092                     u950:
  2390     0092                     l1667:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2393     0092  082C               	movf	sprintf@flag,w
  2394     0093  3903               	andlw	3
  2395     0094  1903               	btfsc	3,2
  2396     0095  2897               	goto	u961
  2397     0096  2898               	goto	u960
  2398     0097                     u961:
  2399     0097  28A1               	goto	l1673
  2400     0098                     u960:
  2401     0098                     l1669:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2404     0098  0830               	movf	sprintf@sp,w
  2405     0099  0084               	movwf	4
  2406     009A  302D               	movlw	45
  2407     009B  1383               	bcf	3,7	;select IRP bank0
  2408     009C  0080               	movwf	0
  2409     009D                     l1671:
  2410     009D  3001               	movlw	1
  2411     009E  00A8               	movwf	??_sprintf
  2412     009F  0828               	movf	??_sprintf,w
  2413     00A0  07B0               	addwf	sprintf@sp,f
  2414     00A1                     l1673:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2417     00A1  0831               	movf	sprintf@c,w
  2418     00A2  00AD               	movwf	sprintf@prec
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2421     00A3  28DB               	goto	l1681
  2422     00A4                     l1675:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2425     00A4  300A               	movlw	10
  2426     00A5  00A0               	movwf	___lwmod@divisor
  2427     00A6  3000               	movlw	0
  2428     00A7  00A1               	movwf	___lwmod@divisor+1
  2429     00A8  082D               	movf	sprintf@prec,w
  2430     00A9  00A8               	movwf	??_sprintf
  2431     00AA  0728               	addwf	??_sprintf,w
  2432     00AB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2433     00AC  0084               	movwf	4
  2434     00AD  120A  118A  23CA  120A  118A  	fcall	stringdir
  2435     00B2  00F2               	movwf	___lwdiv@divisor
  2436     00B3  120A  118A  23CA  120A  118A  	fcall	stringdir
  2437     00B8  00F3               	movwf	___lwdiv@divisor+1
  2438     00B9  082F               	movf	sprintf@val+1,w
  2439     00BA  00F5               	movwf	___lwdiv@dividend+1
  2440     00BB  082E               	movf	sprintf@val,w
  2441     00BC  00F4               	movwf	___lwdiv@dividend
  2442     00BD  120A  118A  2340  120A  118A  	fcall	___lwdiv
  2443     00C2  0873               	movf	?___lwdiv+1,w
  2444     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2445     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  2446     00C5  00A3               	movwf	___lwmod@dividend+1
  2447     00C6  0872               	movf	?___lwdiv,w
  2448     00C7  00A2               	movwf	___lwmod@dividend
  2449     00C8  120A  118A  2384  120A  118A  	fcall	___lwmod
  2450     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2451     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2452     00CF  0820               	movf	?___lwmod,w
  2453     00D0  3E30               	addlw	48
  2454     00D1  00B1               	movwf	sprintf@c
  2455     00D2                     l1677:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2458     00D2  0830               	movf	sprintf@sp,w
  2459     00D3  0084               	movwf	4
  2460     00D4  0831               	movf	sprintf@c,w
  2461     00D5  1383               	bcf	3,7	;select IRP bank0
  2462     00D6  0080               	movwf	0
  2463     00D7                     l1679:
  2464     00D7  3001               	movlw	1
  2465     00D8  00A8               	movwf	??_sprintf
  2466     00D9  0828               	movf	??_sprintf,w
  2467     00DA  07B0               	addwf	sprintf@sp,f
  2468     00DB                     l1681:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2471     00DB  30FF               	movlw	255
  2472     00DC  00A8               	movwf	??_sprintf
  2473     00DD  0828               	movf	??_sprintf,w
  2474     00DE  07AD               	addwf	sprintf@prec,f
  2475     00DF  0A2D               	incf	sprintf@prec,w
  2476     00E0  1D03               	btfss	3,2
  2477     00E1  28E3               	goto	u971
  2478     00E2  28E4               	goto	u970
  2479     00E3                     u971:
  2480     00E3  28A4               	goto	l1675
  2481     00E4                     u970:
  2482     00E4                     l1683:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2485     00E4  3001               	movlw	1
  2486     00E5  07A5               	addwf	sprintf@f,f
  2487     00E6  30FF               	movlw	-1
  2488     00E7  0725               	addwf	sprintf@f,w
  2489     00E8  0084               	movwf	4
  2490     00E9  120A  118A  23CA  120A  118A  	fcall	stringdir
  2491     00EE  00B1               	movwf	sprintf@c
  2492     00EF  0831               	movf	sprintf@c,w
  2493     00F0  1D03               	btfss	3,2
  2494     00F1  28F3               	goto	u981
  2495     00F2  28F4               	goto	u980
  2496     00F3                     u981:
  2497     00F3  2823               	goto	l1633
  2498     00F4                     u980:
  2499     00F4                     l1685:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2502     00F4  0830               	movf	sprintf@sp,w
  2503     00F5  0084               	movwf	4
  2504     00F6  1383               	bcf	3,7	;select IRP bank0
  2505     00F7  0180               	clrf	0
  2506     00F8                     l327:
  2507     00F8  0008               	return
  2508     00F9                     __end_of_sprintf:
  2509                           
  2510                           	psect	text13
  2511     0384                     __ptext13:	
  2512 ;; *************** function ___lwmod *****************
  2513 ;; Defined at:
  2514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  divisor         2    0[BANK0 ] unsigned int 
  2517 ;;  dividend        2    2[BANK0 ] unsigned int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  counter         1    4[BANK0 ] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2    0[BANK0 ] unsigned int 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       4       0       0       0
  2530 ;;      Locals:         0       1       0       0       0
  2531 ;;      Temps:          1       0       0       0       0
  2532 ;;      Totals:         1       5       0       0       0
  2533 ;;Total ram usage:        6 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_sprintf
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543     0384                     ___lwmod:	
  2544                           ;psect for function ___lwmod
  2545                           
  2546     0384                     l1579:	
  2547                           ;incstack = 0
  2548                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2549                           
  2550     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2551     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2552     0386  0820               	movf	___lwmod@divisor,w
  2553     0387  0421               	iorwf	___lwmod@divisor+1,w
  2554     0388  1903               	btfsc	3,2
  2555     0389  2B8B               	goto	u811
  2556     038A  2B8C               	goto	u810
  2557     038B                     u811:
  2558     038B  2BBB               	goto	l1597
  2559     038C                     u810:
  2560     038C                     l1581:
  2561     038C  01A4               	clrf	___lwmod@counter
  2562     038D  0AA4               	incf	___lwmod@counter,f
  2563     038E  2B9A               	goto	l1587
  2564     038F                     l1583:
  2565     038F  3001               	movlw	1
  2566     0390                     u825:
  2567     0390  1003               	clrc
  2568     0391  0DA0               	rlf	___lwmod@divisor,f
  2569     0392  0DA1               	rlf	___lwmod@divisor+1,f
  2570     0393  3EFF               	addlw	-1
  2571     0394  1D03               	skipz
  2572     0395  2B90               	goto	u825
  2573     0396                     l1585:
  2574     0396  3001               	movlw	1
  2575     0397  00FA               	movwf	??___lwmod
  2576     0398  087A               	movf	??___lwmod,w
  2577     0399  07A4               	addwf	___lwmod@counter,f
  2578     039A                     l1587:
  2579     039A  1FA1               	btfss	___lwmod@divisor+1,7
  2580     039B  2B9D               	goto	u831
  2581     039C  2B9E               	goto	u830
  2582     039D                     u831:
  2583     039D  2B8F               	goto	l1583
  2584     039E                     u830:
  2585     039E                     l1589:
  2586     039E  0821               	movf	___lwmod@divisor+1,w
  2587     039F  0223               	subwf	___lwmod@dividend+1,w
  2588     03A0  1D03               	skipz
  2589     03A1  2BA4               	goto	u845
  2590     03A2  0820               	movf	___lwmod@divisor,w
  2591     03A3  0222               	subwf	___lwmod@dividend,w
  2592     03A4                     u845:
  2593     03A4  1C03               	skipc
  2594     03A5  2BA7               	goto	u841
  2595     03A6  2BA8               	goto	u840
  2596     03A7                     u841:
  2597     03A7  2BAE               	goto	l1593
  2598     03A8                     u840:
  2599     03A8                     l1591:
  2600     03A8  0820               	movf	___lwmod@divisor,w
  2601     03A9  02A2               	subwf	___lwmod@dividend,f
  2602     03AA  0821               	movf	___lwmod@divisor+1,w
  2603     03AB  1C03               	skipc
  2604     03AC  03A3               	decf	___lwmod@dividend+1,f
  2605     03AD  02A3               	subwf	___lwmod@dividend+1,f
  2606     03AE                     l1593:
  2607     03AE  3001               	movlw	1
  2608     03AF                     u855:
  2609     03AF  1003               	clrc
  2610     03B0  0CA1               	rrf	___lwmod@divisor+1,f
  2611     03B1  0CA0               	rrf	___lwmod@divisor,f
  2612     03B2  3EFF               	addlw	-1
  2613     03B3  1D03               	skipz
  2614     03B4  2BAF               	goto	u855
  2615     03B5                     l1595:
  2616     03B5  3001               	movlw	1
  2617     03B6  02A4               	subwf	___lwmod@counter,f
  2618     03B7  1D03               	btfss	3,2
  2619     03B8  2BBA               	goto	u861
  2620     03B9  2BBB               	goto	u860
  2621     03BA                     u861:
  2622     03BA  2B9E               	goto	l1589
  2623     03BB                     u860:
  2624     03BB                     l1597:
  2625     03BB  0823               	movf	___lwmod@dividend+1,w
  2626     03BC  00A1               	movwf	?___lwmod+1
  2627     03BD  0822               	movf	___lwmod@dividend,w
  2628     03BE  00A0               	movwf	?___lwmod
  2629     03BF                     l613:
  2630     03BF  0008               	return
  2631     03C0                     __end_of___lwmod:
  2632                           
  2633                           	psect	text14
  2634     0340                     __ptext14:	
  2635 ;; *************** function ___lwdiv *****************
  2636 ;; Defined at:
  2637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  divisor         2    2[COMMON] unsigned int 
  2640 ;;  dividend        2    4[COMMON] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        2    7[COMMON] unsigned int 
  2643 ;;  counter         1    9[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    2[COMMON] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         4       0       0       0       0
  2654 ;;      Locals:         3       0       0       0       0
  2655 ;;      Temps:          1       0       0       0       0
  2656 ;;      Totals:         8       0       0       0       0
  2657 ;;Total ram usage:        8 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_sprintf
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667     0340                     ___lwdiv:	
  2668                           ;psect for function ___lwdiv
  2669                           
  2670     0340                     l1225:	
  2671                           ;incstack = 0
  2672                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2673                           
  2674     0340  01F7               	clrf	___lwdiv@quotient
  2675     0341  01F8               	clrf	___lwdiv@quotient+1
  2676     0342                     l1227:
  2677     0342  0872               	movf	___lwdiv@divisor,w
  2678     0343  0473               	iorwf	___lwdiv@divisor+1,w
  2679     0344  1903               	btfsc	3,2
  2680     0345  2B47               	goto	u411
  2681     0346  2B48               	goto	u410
  2682     0347                     u411:
  2683     0347  2B7F               	goto	l1247
  2684     0348                     u410:
  2685     0348                     l1229:
  2686     0348  01F9               	clrf	___lwdiv@counter
  2687     0349  0AF9               	incf	___lwdiv@counter,f
  2688     034A  2B56               	goto	l1235
  2689     034B                     l1231:
  2690     034B  3001               	movlw	1
  2691     034C                     u425:
  2692     034C  1003               	clrc
  2693     034D  0DF2               	rlf	___lwdiv@divisor,f
  2694     034E  0DF3               	rlf	___lwdiv@divisor+1,f
  2695     034F  3EFF               	addlw	-1
  2696     0350  1D03               	skipz
  2697     0351  2B4C               	goto	u425
  2698     0352                     l1233:
  2699     0352  3001               	movlw	1
  2700     0353  00F6               	movwf	??___lwdiv
  2701     0354  0876               	movf	??___lwdiv,w
  2702     0355  07F9               	addwf	___lwdiv@counter,f
  2703     0356                     l1235:
  2704     0356  1FF3               	btfss	___lwdiv@divisor+1,7
  2705     0357  2B59               	goto	u431
  2706     0358  2B5A               	goto	u430
  2707     0359                     u431:
  2708     0359  2B4B               	goto	l1231
  2709     035A                     u430:
  2710     035A                     l1237:
  2711     035A  3001               	movlw	1
  2712     035B                     u445:
  2713     035B  1003               	clrc
  2714     035C  0DF7               	rlf	___lwdiv@quotient,f
  2715     035D  0DF8               	rlf	___lwdiv@quotient+1,f
  2716     035E  3EFF               	addlw	-1
  2717     035F  1D03               	skipz
  2718     0360  2B5B               	goto	u445
  2719     0361  0873               	movf	___lwdiv@divisor+1,w
  2720     0362  0275               	subwf	___lwdiv@dividend+1,w
  2721     0363  1D03               	skipz
  2722     0364  2B67               	goto	u455
  2723     0365  0872               	movf	___lwdiv@divisor,w
  2724     0366  0274               	subwf	___lwdiv@dividend,w
  2725     0367                     u455:
  2726     0367  1C03               	skipc
  2727     0368  2B6A               	goto	u451
  2728     0369  2B6B               	goto	u450
  2729     036A                     u451:
  2730     036A  2B72               	goto	l1243
  2731     036B                     u450:
  2732     036B                     l1239:
  2733     036B  0872               	movf	___lwdiv@divisor,w
  2734     036C  02F4               	subwf	___lwdiv@dividend,f
  2735     036D  0873               	movf	___lwdiv@divisor+1,w
  2736     036E  1C03               	skipc
  2737     036F  03F5               	decf	___lwdiv@dividend+1,f
  2738     0370  02F5               	subwf	___lwdiv@dividend+1,f
  2739     0371                     l1241:
  2740     0371  1477               	bsf	___lwdiv@quotient,0
  2741     0372                     l1243:
  2742     0372  3001               	movlw	1
  2743     0373                     u465:
  2744     0373  1003               	clrc
  2745     0374  0CF3               	rrf	___lwdiv@divisor+1,f
  2746     0375  0CF2               	rrf	___lwdiv@divisor,f
  2747     0376  3EFF               	addlw	-1
  2748     0377  1D03               	skipz
  2749     0378  2B73               	goto	u465
  2750     0379                     l1245:
  2751     0379  3001               	movlw	1
  2752     037A  02F9               	subwf	___lwdiv@counter,f
  2753     037B  1D03               	btfss	3,2
  2754     037C  2B7E               	goto	u471
  2755     037D  2B7F               	goto	u470
  2756     037E                     u471:
  2757     037E  2B5A               	goto	l1237
  2758     037F                     u470:
  2759     037F                     l1247:
  2760     037F  0878               	movf	___lwdiv@quotient+1,w
  2761     0380  00F3               	movwf	?___lwdiv+1
  2762     0381  0877               	movf	___lwdiv@quotient,w
  2763     0382  00F2               	movwf	?___lwdiv
  2764     0383                     l603:
  2765     0383  0008               	return
  2766     0384                     __end_of___lwdiv:
  2767                           
  2768                           	psect	text15
  2769     02FA                     __ptext15:	
  2770 ;; *************** function _Lcd_Write_String *****************
  2771 ;; Defined at:
  2772 ;;		line 66 in file "LCD.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  a               2    5[COMMON] PTR unsigned char 
  2775 ;;		 -> ResSlave2C(5), STR_5(4), ResSlave2(5), STR_3(4), 
  2776 ;;		 -> ResSlave1(5), STR_1(4), 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  i               2    0[BANK0 ] int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         2       0       0       0       0
  2789 ;;      Locals:         0       2       0       0       0
  2790 ;;      Temps:          3       0       0       0       0
  2791 ;;      Totals:         5       2       0       0       0
  2792 ;;Total ram usage:        7 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 3
  2795 ;; This function calls:
  2796 ;;		_Lcd_Write_Char
  2797 ;; This function is called by:
  2798 ;;		_escrituraLCD
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     02FA                     _Lcd_Write_String:	
  2803                           ;psect for function _Lcd_Write_String
  2804                           
  2805     02FA                     l1623:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2808                           
  2809                           
  2810                           ;LCD.c: 67:     int i;;LCD.c: 68:     for (i = 0; a[i] != '\0'; i++)
  2811     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2812     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2813     02FC  01A0               	clrf	Lcd_Write_String@i
  2814     02FD  01A1               	clrf	Lcd_Write_String@i+1
  2815     02FE  2B23               	goto	l1629
  2816     02FF                     l1625:
  2817                           
  2818                           ;LCD.c: 69:         Lcd_Write_Char(a[i]);
  2819     02FF  0820               	movf	Lcd_Write_String@i,w
  2820     0300  0775               	addwf	Lcd_Write_String@a,w
  2821     0301  00F8               	movwf	??_Lcd_Write_String+1
  2822     0302  0876               	movf	Lcd_Write_String@a+1,w
  2823     0303  00F7               	movwf	??_Lcd_Write_String
  2824     0304  1803               	skipnc
  2825     0305  0AF7               	incf	??_Lcd_Write_String,f
  2826     0306  1FA0               	btfss	Lcd_Write_String@i,7
  2827     0307  2B09               	goto	u890
  2828     0308  03F7               	decf	??_Lcd_Write_String,f
  2829     0309                     u890:
  2830     0309  0877               	movf	??_Lcd_Write_String,w
  2831     030A  00F9               	movwf	??_Lcd_Write_String+2
  2832     030B  0879               	movf	??_Lcd_Write_String+2,w
  2833     030C  1283               	bcf	3,5	;RP0=0, select bank0
  2834     030D  1303               	bcf	3,6	;RP1=0, select bank0
  2835     030E  00FF               	movwf	btemp+1
  2836     030F  0878               	movf	??_Lcd_Write_String+1,w
  2837     0310  0084               	movwf	4
  2838     0311  120A  118A  23C0  120A  118A  	fcall	stringtab
  2839     0316  120A  118A  2460  120A  118A  	fcall	_Lcd_Write_Char
  2840     031B                     l1627:
  2841     031B  3001               	movlw	1
  2842     031C  1283               	bcf	3,5	;RP0=0, select bank0
  2843     031D  1303               	bcf	3,6	;RP1=0, select bank0
  2844     031E  07A0               	addwf	Lcd_Write_String@i,f
  2845     031F  1803               	skipnc
  2846     0320  0AA1               	incf	Lcd_Write_String@i+1,f
  2847     0321  3000               	movlw	0
  2848     0322  07A1               	addwf	Lcd_Write_String@i+1,f
  2849     0323                     l1629:
  2850     0323  0820               	movf	Lcd_Write_String@i,w
  2851     0324  0775               	addwf	Lcd_Write_String@a,w
  2852     0325  00F8               	movwf	??_Lcd_Write_String+1
  2853     0326  0876               	movf	Lcd_Write_String@a+1,w
  2854     0327  00F7               	movwf	??_Lcd_Write_String
  2855     0328  1803               	skipnc
  2856     0329  0AF7               	incf	??_Lcd_Write_String,f
  2857     032A  1FA0               	btfss	Lcd_Write_String@i,7
  2858     032B  2B2D               	goto	u900
  2859     032C  03F7               	decf	??_Lcd_Write_String,f
  2860     032D                     u900:
  2861     032D  0877               	movf	??_Lcd_Write_String,w
  2862     032E  00F9               	movwf	??_Lcd_Write_String+2
  2863     032F  0879               	movf	??_Lcd_Write_String+2,w
  2864     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2865     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0332  00FF               	movwf	btemp+1
  2867     0333  0878               	movf	??_Lcd_Write_String+1,w
  2868     0334  0084               	movwf	4
  2869     0335  120A  118A  23C0  120A  118A  	fcall	stringtab
  2870     033A  3A00               	xorlw	0
  2871     033B  1D03               	skipz
  2872     033C  2B3E               	goto	u911
  2873     033D  2B3F               	goto	u910
  2874     033E                     u911:
  2875     033E  2AFF               	goto	l1625
  2876     033F                     u910:
  2877     033F                     l211:
  2878     033F  0008               	return
  2879     0340                     __end_of_Lcd_Write_String:
  2880                           
  2881                           	psect	text16
  2882     0460                     __ptext16:	
  2883 ;; *************** function _Lcd_Write_Char *****************
  2884 ;; Defined at:
  2885 ;;		line 57 in file "LCD.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  a               1    wreg     unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  a               1    4[COMMON] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         0       0       0       0       0
  2900 ;;      Locals:         1       0       0       0       0
  2901 ;;      Temps:          1       0       0       0       0
  2902 ;;      Totals:         2       0       0       0       0
  2903 ;;Total ram usage:        2 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 2
  2906 ;; This function calls:
  2907 ;;		_Lcd_Port
  2908 ;; This function is called by:
  2909 ;;		_Lcd_Write_String
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     0460                     _Lcd_Write_Char:	
  2914                           ;psect for function _Lcd_Write_Char
  2915                           
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2919                           ;Lcd_Write_Char@a stored from wreg
  2920     0460  00F4               	movwf	Lcd_Write_Char@a
  2921     0461                     l1569:
  2922                           
  2923                           ;LCD.c: 58:     RE0 = 1;
  2924     0461  1283               	bcf	3,5	;RP0=0, select bank0
  2925     0462  1303               	bcf	3,6	;RP1=0, select bank0
  2926     0463  1409               	bsf	9,0	;volatile
  2927     0464                     l1571:
  2928                           
  2929                           ;LCD.c: 59:     Lcd_Port(a);
  2930     0464  0874               	movf	Lcd_Write_Char@a,w
  2931     0465  120A  118A  24B6  120A  118A  	fcall	_Lcd_Port
  2932     046A                     l1573:
  2933                           
  2934                           ;LCD.c: 60:     RE1 = 1;
  2935     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2936     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2937     046C  1489               	bsf	9,1	;volatile
  2938     046D                     l1575:
  2939                           
  2940                           ;LCD.c: 61:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2941     046D  301A               	movlw	26
  2942     046E  00F3               	movwf	??_Lcd_Write_Char
  2943     046F                     u1147:
  2944     046F  0BF3               	decfsz	??_Lcd_Write_Char,f
  2945     0470  2C6F               	goto	u1147
  2946     0471  0000               	nop
  2947     0472                     l1577:
  2948                           
  2949                           ;LCD.c: 62:     RE1 = 0;
  2950     0472  1283               	bcf	3,5	;RP0=0, select bank0
  2951     0473  1303               	bcf	3,6	;RP1=0, select bank0
  2952     0474  1089               	bcf	9,1	;volatile
  2953     0475                     l205:
  2954     0475  0008               	return
  2955     0476                     __end_of_Lcd_Write_Char:
  2956                           
  2957                           	psect	text17
  2958     0410                     __ptext17:	
  2959 ;; *************** function _Lcd_Set_Cursor *****************
  2960 ;; Defined at:
  2961 ;;		line 31 in file "LCD.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  a               1    wreg     unsigned char 
  2964 ;;  b               1    6[COMMON] unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  a               1    7[COMMON] unsigned char 
  2967 ;;  direccion       1    8[COMMON] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         1       0       0       0       0
  2978 ;;      Locals:         2       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0
  2980 ;;      Totals:         3       0       0       0       0
  2981 ;;Total ram usage:        3 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 3
  2984 ;; This function calls:
  2985 ;;		_Lcd_Cmd
  2986 ;; This function is called by:
  2987 ;;		_escrituraLCD
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0410                     _Lcd_Set_Cursor:	
  2992                           ;psect for function _Lcd_Set_Cursor
  2993                           
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2997                           ;Lcd_Set_Cursor@a stored from wreg
  2998     0410  00F7               	movwf	Lcd_Set_Cursor@a
  2999     0411                     l1611:
  3000                           
  3001                           ;LCD.c: 32:     char direccion;;LCD.c: 33:     if (a == 1) {
  3002     0411  0377               	decf	Lcd_Set_Cursor@a,w
  3003     0412  1D03               	btfss	3,2
  3004     0413  2C15               	goto	u871
  3005     0414  2C16               	goto	u870
  3006     0415                     u871:
  3007     0415  2C20               	goto	l1617
  3008     0416                     u870:
  3009     0416                     l1613:
  3010                           
  3011                           ;LCD.c: 34:         direccion = 0x80 + b - 1;
  3012     0416  0876               	movf	Lcd_Set_Cursor@b,w
  3013     0417  3E7F               	addlw	127
  3014     0418  00F8               	movwf	Lcd_Set_Cursor@direccion
  3015     0419                     l1615:
  3016                           
  3017                           ;LCD.c: 35:         Lcd_Cmd(direccion);
  3018     0419  0878               	movf	Lcd_Set_Cursor@direccion,w
  3019     041A  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  3020                           
  3021                           ;LCD.c: 36:     } else if (a == 2) {
  3022     041F  2C2F               	goto	l199
  3023     0420                     l1617:
  3024     0420  3002               	movlw	2
  3025     0421  0677               	xorwf	Lcd_Set_Cursor@a,w
  3026     0422  1D03               	btfss	3,2
  3027     0423  2C25               	goto	u881
  3028     0424  2C26               	goto	u880
  3029     0425                     u881:
  3030     0425  2C2F               	goto	l199
  3031     0426                     u880:
  3032     0426                     l1619:
  3033                           
  3034                           ;LCD.c: 37:         direccion = 0xC0 + b - 1;
  3035     0426  0876               	movf	Lcd_Set_Cursor@b,w
  3036     0427  3EBF               	addlw	191
  3037     0428  00F8               	movwf	Lcd_Set_Cursor@direccion
  3038     0429                     l1621:
  3039                           
  3040                           ;LCD.c: 38:         Lcd_Cmd(direccion);
  3041     0429  0878               	movf	Lcd_Set_Cursor@direccion,w
  3042     042A  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  3043     042F                     l199:
  3044     042F  0008               	return
  3045     0430                     __end_of_Lcd_Set_Cursor:
  3046                           
  3047                           	psect	text18
  3048     0430                     __ptext18:	
  3049 ;; *************** function _Lcd_Cmd *****************
  3050 ;; Defined at:
  3051 ;;		line 17 in file "LCD.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  a               1    wreg     unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  a               1    5[COMMON] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0
  3067 ;;      Temps:          2       0       0       0       0
  3068 ;;      Totals:         3       0       0       0       0
  3069 ;;Total ram usage:        3 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 2
  3072 ;; This function calls:
  3073 ;;		_Lcd_Port
  3074 ;; This function is called by:
  3075 ;;		_Lcd_Set_Cursor
  3076 ;;		_Lcd_Init
  3077 ;;		_Lcd_Clear
  3078 ;;		_Lcd_Shift_Right
  3079 ;;		_Lcd_Shift_Left
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083     0430                     _Lcd_Cmd:	
  3084                           ;psect for function _Lcd_Cmd
  3085                           
  3086                           
  3087                           ;incstack = 0
  3088                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3089                           ;Lcd_Cmd@a stored from wreg
  3090     0430  00F5               	movwf	Lcd_Cmd@a
  3091     0431                     l1559:
  3092                           
  3093                           ;LCD.c: 18:     RE0 = 0;
  3094     0431  1283               	bcf	3,5	;RP0=0, select bank0
  3095     0432  1303               	bcf	3,6	;RP1=0, select bank0
  3096     0433  1009               	bcf	9,0	;volatile
  3097     0434                     l1561:
  3098                           
  3099                           ;LCD.c: 19:     Lcd_Port(a);
  3100     0434  0875               	movf	Lcd_Cmd@a,w
  3101     0435  120A  118A  24B6  120A  118A  	fcall	_Lcd_Port
  3102     043A                     l1563:
  3103                           
  3104                           ;LCD.c: 20:     RE1 = 1;
  3105     043A  1283               	bcf	3,5	;RP0=0, select bank0
  3106     043B  1303               	bcf	3,6	;RP1=0, select bank0
  3107     043C  1489               	bsf	9,1	;volatile
  3108     043D                     l1565:
  3109                           
  3110                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3111     043D  300B               	movlw	11
  3112     043E  00F4               	movwf	??_Lcd_Cmd+1
  3113     043F  3062               	movlw	98
  3114     0440  00F3               	movwf	??_Lcd_Cmd
  3115     0441                     u1157:
  3116     0441  0BF3               	decfsz	??_Lcd_Cmd,f
  3117     0442  2C41               	goto	u1157
  3118     0443  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3119     0444  2C41               	goto	u1157
  3120     0445  0000               	nop
  3121     0446                     l1567:
  3122                           
  3123                           ;LCD.c: 23:     RE1 = 0;
  3124     0446  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0447  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0448  1089               	bcf	9,1	;volatile
  3127     0449                     l190:
  3128     0449  0008               	return
  3129     044A                     __end_of_Lcd_Cmd:
  3130                           
  3131                           	psect	text19
  3132     04B6                     __ptext19:	
  3133 ;; *************** function _Lcd_Port *****************
  3134 ;; Defined at:
  3135 ;;		line 13 in file "LCD.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  a               1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  a               1    2[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0
  3152 ;;      Totals:         1       0       0       0       0
  3153 ;;Total ram usage:        1 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_Lcd_Cmd
  3160 ;;		_Lcd_Init
  3161 ;;		_Lcd_Write_Char
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165     04B6                     _Lcd_Port:	
  3166                           ;psect for function _Lcd_Port
  3167                           
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _Lcd_Port: [wreg]
  3171                           ;Lcd_Port@a stored from wreg
  3172     04B6  00F2               	movwf	Lcd_Port@a
  3173     04B7                     l1557:
  3174                           
  3175                           ;LCD.c: 14:     PORTD = a;
  3176     04B7  0872               	movf	Lcd_Port@a,w
  3177     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  3178     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  3179     04BA  0088               	movwf	8	;volatile
  3180     04BB                     l187:
  3181     04BB  0008               	return
  3182     04BC                     __end_of_Lcd_Port:
  3183                           
  3184                           	psect	text20
  3185     04A3                     __ptext20:	
  3186 ;; *************** function _isr *****************
  3187 ;; Defined at:
  3188 ;;		line 66 in file "mSPI.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		None
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0
  3204 ;;      Temps:          2       0       0       0       0
  3205 ;;      Totals:         2       0       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		Interrupt level 1
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215     04A3                     _isr:	
  3216                           ;psect for function _isr
  3217                           
  3218     04A3                     i1l154:
  3219     04A3  0871               	movf	??_isr+1,w
  3220     04A4  008A               	movwf	10
  3221     04A5  0E70               	swapf	??_isr,w
  3222     04A6  0083               	movwf	3
  3223     04A7  0EFE               	swapf	btemp,f
  3224     04A8  0E7E               	swapf	btemp,w
  3225     04A9  0009               	retfie
  3226     04AA                     __end_of_isr:
  3227     007E                     btemp	set	126	;btemp
  3228     007E                     wtemp0	set	126
  3229                           
  3230                           	psect	intentry
  3231     0004                     __pintentry:	
  3232                           ;incstack = 0
  3233                           ; Regs used in _isr: []
  3234                           
  3235     0004                     interrupt_function:
  3236     007E                     saved_w	set	btemp
  3237     0004  00FE               	movwf	btemp
  3238     0005  0E03               	swapf	3,w
  3239     0006  00F0               	movwf	??_isr
  3240     0007  080A               	movf	10,w
  3241     0008  00F1               	movwf	??_isr+1
  3242     0009  120A  118A  2CA3   	ljmp	_isr
  3243                           
  3244                           	psect	idloc
  3245                           
  3246                           ;Config register IDLOC0 @ 0x2000
  3247                           ;	unspecified, using default values
  3248     2000                     	org	8192
  3249     2000  3FFF               	dw	16383
  3250                           
  3251                           ;Config register IDLOC1 @ 0x2001
  3252                           ;	unspecified, using default values
  3253     2001                     	org	8193
  3254     2001  3FFF               	dw	16383
  3255                           
  3256                           ;Config register IDLOC2 @ 0x2002
  3257                           ;	unspecified, using default values
  3258     2002                     	org	8194
  3259     2002  3FFF               	dw	16383
  3260                           
  3261                           ;Config register IDLOC3 @ 0x2003
  3262                           ;	unspecified, using default values
  3263     2003                     	org	8195
  3264     2003  3FFF               	dw	16383
  3265                           
  3266                           	psect	config
  3267                           
  3268                           ;Config register CONFIG1 @ 0x2007
  3269                           ;	Oscillator Selection bits
  3270                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3271                           ;	Watchdog Timer Enable bit
  3272                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3273                           ;	Power-up Timer Enable bit
  3274                           ;	PWRTE = OFF, PWRT disabled
  3275                           ;	RE3/MCLR pin function select bit
  3276                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3277                           ;	Code Protection bit
  3278                           ;	CP = OFF, Program memory code protection is disabled
  3279                           ;	Data Code Protection bit
  3280                           ;	CPD = OFF, Data memory code protection is disabled
  3281                           ;	Brown Out Reset Selection bits
  3282                           ;	BOREN = OFF, BOR disabled
  3283                           ;	Internal External Switchover bit
  3284                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3285                           ;	Fail-Safe Clock Monitor Enabled bit
  3286                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3287                           ;	Low Voltage Programming Enable bit
  3288                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3289                           ;	In-Circuit Debugger Mode bit
  3290                           ;	DEBUG = 0x1, unprogramme  3291     2007                     	org	8199
  3292     2007  20D4               	dw	8404
  3293                           
  3294                           ;Config register CONFIG2 @ 0x2008
  3295                           ;	Brown-out Reset Selection bit
  3296                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3297                           ;	Flash Program Memory Self Write Enable bits
  3298                           ;	WRT = OFF, Write protection off
  3299     2008                     	org	8200
  3300     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     23      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> ResSlave2C(BANK0[5]), ResSlave2(BANK0[5]), ResSlave1(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> ResSlave2C(BANK0[5]), STR_5(CODE[4]), ResSlave2(BANK0[5]), STR_3(CODE[4]), 
		 -> ResSlave1(BANK0[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_escrituraLCD
    _escrituraLCD->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4053
                                             21 BANK0      2     2      0
                       _escrituraLCD
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     705
                           _Lcd_Init
                      _configIntbits
                          _configOsc
                         _configPort
                             _pullup
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _pullup                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configPort                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     252
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _configIntbits                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _escrituraLCD                                         3     3      0    3326
                                             18 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1800
                                              5 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     732
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       3     2      1     794
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escrituraLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configIntbits
     _configOsc
     _configPort
     _pullup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 17:45:53 2023

                       pc 0002               _SSPSTATbits 0094                        l20 049C  
                      l23 04A2                        l16 045A                        l17 045F  
                      l34 0493                        l26 04AF                        l73 048A  
                      l91 02AB                        l76 04B5                        l79 04BE  
                      l97 02AE                        fsr 0004                       l202 02F9  
                     l211 033F                       l205 0475                       l161 01AC  
                     l173 040F                       l190 0449                       l327 00F8  
                     l176 01A0                       l187 04BB                       l603 0383  
                     l613 03BF                       l199 042F                       _RB0 0030  
                     _RE0 0048                       _RE1 0049                       u410 0348  
                     u411 0347                       u430 035A                       u431 0359  
                     u600 027C                       u425 034C                       u601 027B  
                     u450 036B                       u610 028A                       u451 036A  
                     u611 0289                       u620 0298                       u540 0452  
                     u445 035B                       u621 0297                       u541 0451  
                     u470 037F                       u630 02A6                       u550 04A2  
                     u471 037E                       u455 0367                       u631 02A5  
                     u551 04A1                       u560 0245                       u465 0373  
                     u561 0244                       u810 038C                       u570 0251  
                     u811 038B                       u571 0250                       u900 032D  
                     u580 025F                       u581 025E                       u910 033F  
                     u830 039E                       u590 026C                       u911 033E  
                     u831 039D                       u591 026B                       u840 03A8  
                     u920 0029                       u841 03A7                       u825 0390  
                     u921 0028                       u930 0061                       u931 0060  
                     u860 03BB                       u940 0087                       u861 03BA  
                     u845 03A4                       u941 0086                       u870 0416  
                     u950 0092                       u871 0415                       u855 03AF  
                     u951 0091                       u880 0426                       u960 0098  
                     u881 0425                       u961 0097                       u945 0083  
                     u890 0309                       u970 00E4                       u971 00E3  
                     u980 00F4                       u981 00F3                       u990 01AC  
                     u991 01AB                       _isr 04A3                       fsr0 0004  
                     indf 0000                      l1301 0487                      l1231 034B  
                    l1303 0488                      l1311 04B3                      l1241 0371  
                    l1233 0352                      l1225 0340                      l1321 024A  
                    l1305 0489                      l1243 0372                      l1235 0356  
                    l1227 0342                      l1315 04BC                      l1331 026C  
                    l1323 0251                      l1245 0379                      l1237 035A  
                    l1229 0348                      l1341 0291                      l1333 0273  
                    l1325 0258                      l1317 023E                      l1309 04B0  
                    l1239 036B                      l1247 037F                      l1343 0298  
                    l1335 027C                      l1327 025F                      l1319 0245  
                    l1601 02AF                      l1345 029F                      l1337 0283  
                    l1329 0266                      l1281 0459                      l1273 044B  
                    l1611 0411                      l1603 02B5                      l1347 02A6  
                    l1339 028A                      l1291 047F                      l1275 0452  
                    l1283 049C                      l1621 0429                      l1613 0416  
                    l1701 0101                      l1605 02BE                      l1349 02AB  
                    l1293 0481                      l1285 0476                      l1277 0454  
                    l1445 04AB                      l1615 0419                      l1623 02FA  
                    l1631 0020                      l1711 0156                      l1703 010A  
                    l1607 02CD                      l1295 0482                      l1287 047A  
                    l1279 0456                      l1447 048B                      l1561 0434  
                    l1617 0420                      l1625 02FF                      l1633 0023  
                    l1713 0167                      l1705 012C                      l1609 02D3  
                    l1297 0483                      l1289 047D                      l1449 0490  
                    l1721 01A1                      l1563 043A                      l1619 0426  
                    l1571 0464                      l1627 031B                      l1651 0061  
                    l1643 0034                      l1635 0029                      l1715 0170  
                    l1707 0134                      l1299 0486                      l1731 01B8  
                    l1723 01A6                      l1557 04B7                      l1565 043D  
                    l1573 046A                      l1629 0323                      l1581 038C  
                    l1661 006C                      l1653 0065                      l1645 0051  
                    l1637 002E                      l1717 0192                      l1709 0145  
                    l1741 01D2                      l1733 01B9                      l1567 0446  
                    l1559 0431                      l1575 046D                      l1591 03A8  
                    l1583 038F                      l1671 009D                      l1655 006A  
                    l1647 0059                      l1639 0033                      l1751 01EF  
                    l1743 01DC                      l1735 01BA                      l1727 01B0  
                    l1577 0472                      l1569 0461                      l1593 03AE  
                    l1585 0396                      l1681 00DB                      l1673 00A1  
                    l1665 0088                      l1649 005D                      l1761 0210  
                    l1753 01F5                      l1745 01DF                      l1737 01C4  
                    l1729 01B5                      l1595 03B5                      l1587 039A  
                    l1579 0384                      l1675 00A4                      l1667 0092  
                    l1683 00E4                      l1763 021A                      l1755 0207  
                    l1747 01E4                      l1739 01CA                      l1589 039E  
                    l1597 03BB                      l1677 00D2                      l1669 0098  
                    l1685 00F4                      l1693 03E9                      l1765 0220  
                    l1749 01E5                      l1757 020A                      l1679 00D7  
                    l1695 040A                      l1767 0232                      l1759 020F  
                    l1769 0235                      l1699 00F9                      l1797 0046  
                    ?_isr 0070                      STR_1 03DA                      STR_2 03E6  
                    STR_3 03DE                      STR_4 03E6                      STR_5 03E2  
                    STR_6 03E6                      u1000 01B0                      u1001 01AF  
                    u1010 01B5                      u1011 01B4                      u1020 01E4  
                    u1021 01E3                      u1030 020F                      u1031 020E  
                    u1107 02B9                      u1117 02C8                      u1127 02D7  
                    u1047 01C0                      u1137 019A                      u1057 01D8  
                    u1147 046F                      u1067 01EB                      u1157 0441  
                    u1077 0203                      u1087 0216                      u1097 022E  
       ?_Lcd_Write_String 0075                      _main 01A1                      _tipo 007B  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 044A                     ??_isr 0070             configOsc@freq 0072  
                   ?_main 0070                     _ANSEL 0188           __end_of___lwdiv 0384  
                   i1l154 04A3           __end_of___lwmod 03C0                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089           ??_configIntbits 0072           __end_of_dpowers 03DA  
                   _temp1 0039                     _temp2 0038                     _temp3 0037  
                   _setup 03E9             ?_escrituraLCD 0070                     pclath 000A  
         __end_of_spiInit 0460           __end_of_spiRead 0494                     status 0003  
                   wtemp0 007E           __end_of_sprintf 00F9          __end_of_Lcd_Init 02FA  
        __end_of_Lcd_Port 04BC           __initialization 000F              __end_of_main 023E  
                  ??_main 0035                _ResSlave2C 003A            ??_escrituraLCD 0032  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0073  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lwdiv 0076                 ??___lwmod 007A                    _pullup 04B0  
                  saved_w 007E          __end_of_spiWrite 04B0                 ??_spiInit 0075  
               ??_spiRead 0072                 ??_sprintf 0028           Lcd_Set_Cursor@a 0077  
         Lcd_Set_Cursor@b 0076   __end_of__initialization 0019   Lcd_Set_Cursor@direccion 0078  
          __pcstackCOMMON 0070             __end_of_setup 0410            _Lcd_Set_Cursor 0410  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0078                __pbssBANK0 0037                __pmaintext 01A1  
              __pintentry 0004      __end_of_escrituraLCD 01A1    __end_of_Lcd_Set_Cursor 0430  
                 ?_pullup 0070                _configPort 0476                ??_Lcd_Init 0076  
              ??_Lcd_Port 0072                   _SSPSTAT 0094                __stringtab 03C0  
          _Lcd_Write_Char 0460                   _Lcd_Cmd 0430         __end_of_configOsc 02AF  
               ?_spiWrite 0070                   ___lwdiv 0340                   ___lwmod 0384  
         ?_Lcd_Set_Cursor 0076                   __ptext1 04AA                   __ptext2 048B  
                 __ptext3 049C                   __ptext4 03E9                   __ptext5 044A  
                 __ptext6 04B0                   __ptext7 0476                   __ptext8 023E  
                 __ptext9 04BC                   _dpowers 03D0                   _spiInit 044A  
                 _spiRead 048B     __end_of_configIntbits 04BF                   _sprintf 001D  
                 clrloop0 0495    __end_of_Lcd_Write_Char 0476      end_of_initialization 0019  
              ??_spiWrite 0072                 Lcd_Port@a 0072                 _PORTCbits 0007  
             ?_configPort 0070               spiWrite@dat 0072           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 0020            _spiReceiveWait 049C  
        _Lcd_Write_String 02FA            __end_of_pullup 04B6       start_initialization 000F  
             __end_of_isr 04AA              _escrituraLCD 00F9                 _ResSlave1 0044  
               _ResSlave2 003F    __end_of_spiReceiveWait 04A3           Lcd_Write_Char@a 0074  
                ??_pullup 0072               __pbssCOMMON 007B                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070               sprintf@flag 002C  
             sprintf@prec 002D          ___lwdiv@dividend 0074           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0077                  ?___lwdiv 0072                  ?___lwmod 0020  
               _configOsc 023E                 __pstrings 03C0                  ?_spiInit 0072  
                ?_spiRead 0070          ___lwdiv@quotient 0077                  ?_sprintf 0025  
    spiInit@sTransmitEdge 0074         interrupt_function 0004                  _IOCBbits 0096  
               clear_ram0 0494        spiInit@sDataSample 0072                  Lcd_Cmd@a 0075  
              ?_configOsc 0072               __stringbase 03CF                  _WPUBbits 0095  
        ??_Lcd_Write_Char 0073              ??_configPort 0072                  _Lcd_Init 02AF  
                _Lcd_Port 04B6  __end_of_Lcd_Write_String 0340        __end_of_configPort 048B  
      __end_of__stringtab 03D0                sprintf@val 002E           ___lwdiv@divisor 0072  
         ___lwdiv@counter 0079                  __ptext10 02AF                  __ptext11 00F9  
                __ptext20 04A3                  __ptext12 001D                  __ptext13 0384  
                __ptext14 0340                  __ptext15 02FA                  __ptext16 0460  
                __ptext17 0410                  __ptext18 0430                  __ptext19 04B6  
                _spiWrite 04AA              spiInit@sType 0075               ??_configOsc 0074  
       spiInit@sClockIdle 0073                _INTCONbits 000B             _configIntbits 04BC  
                intlevel1 0000                 sprintf@ap 002B                 sprintf@sp 0030  
        ___lwmod@dividend 0022          ??_spiReceiveWait 0072                 stringcode 03CA  
              _OSCCONbits 008F                  sprintf@c 0031                  sprintf@f 0025  
         ___lwmod@divisor 0020           ___lwmod@counter 0024                  stringdir 03CA  
                stringtab 03C0            ?_configIntbits 0070  
